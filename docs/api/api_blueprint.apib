FORMAT: V1
HOST: http://nextgen.eventyay.com

# Orga-Server

The Open Event API Server

## JWT Auth Key [/auth/session?filter-parameters]

### JWT Auth Key [POST]

+ Request

    + Headers

            Content-Type: application/json
 
    + Body

            {
                "email": "email@example.com",
                "password": "password"
            }

+ Response 200 (application/json)

        {
            "access_token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZGVudGl0eSI6MSwiaWF0IjoxNDk2OTU2ODMwLCJuYmYiOjE0OTY5NTY4MzAsImV4cCI6MTQ5NzA0MzIzMH0.bjl0"
        }

## Users Collection [/users?page,limit]

### List All Users [GET]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "count": 1
          },
          "data": [
            {
              "attributes": {
                "created-at": "2017-06-01T01:24:47.500127+00:00",
                "google": null,
                "instagram": null,
                "firstname": null,
                "lastname": null,
                "twitter": null,
                "signup-at": "2017-06-01T01:25:07.385816+00:00",
                "is-super-admin": true,
                "thumbnail": null,
                "email": "me@ipiyush.com",
                "avatar": null,
                "contact": null,
                "is-admin": true,
                "details": null,
                "last-accessed-at": null,
                "small": null,
                "facebook": null,
                "deleted-at": null,
                "is-verified": true,
                "avatar-uploaded": null,
                "icon": null
              },
              "type": "user",
              "id": "1",
              "links": {
                "self": "/v1/users/1"
              }
            }
          ],
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/users"
          }
        }


### Create User [POST]

+ name (string) - Name of the user
+ passowrd (string) - Password of the user **(required)**
+ email (string) - Email of the user **(required)**

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>
        
    + Body

            {
              "data": {
                "attributes": {
                  "name": "Open Event User",
                  "email": "example@example.com",
                  "password": "12345678"
                },
                "type": "user"
              }
            }

+ Response 200 (application/vnd.api+json)

        {
            "data": {
                "attributes": {
                "name": "Open Event User",
                "email": "example@example.com",
                "password": "12345678"
                },
                "type": "user"
            }
        }

## User Details [/users/{user_id}]
+ Parameters
    + user_id (integer) - ID of the user in the form of an integer

### Get Details [GET]
+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "attributes": {
              "created-at": "2017-06-01T01:24:47.500127+00:00",
              "google": null,
              "instagram": null,
              "firstname": null,
              "lastname": null,
              "twitter": null,
              "signup-at": "2017-06-01T01:25:07.385816+00:00",
              "is-super-admin": true,
              "thumbnail": null,
              "email": "me@ipiyush.com",
              "avatar": null,
              "contact": null,
              "is-admin": true,
              "details": null,
              "last-accessed-at": null,
              "small": null,
              "facebook": null,
              "deleted-at": null,
              "is-verified": true,
              "avatar-uploaded": null,
              "icon": null
            },
            "type": "user",
            "id": "1",
            "links": {
              "self": "/v1/users/1"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/users/1"
          }
        }

        
### Update User [PATCH]

Authorized user should be same as user in request body or must be admin.

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>
        
    + Body
    
            {
              "data": {
                "attributes": {
                  "name": "Open Event User",
                  "email": "example@example.com",
                  "password": "12345678"
                },
                "type": "user"
              }
            }

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "attributes": {
              "created-at": "2017-06-01T01:24:47.500127+00:00",
              "google": null,
              "instagram": null,
              "firstname": null,
              "lastname": null,
              "twitter": null,
              "signup-at": "2017-06-01T01:25:07.385816+00:00",
              "is-super-admin": true,
              "thumbnail": null,
              "email": "me@ipiyush.com",
              "avatar": null,
              "contact": null,
              "is-admin": true,
              "details": null,
              "last-accessed-at": null,
              "small": null,
              "facebook": null,
              "deleted-at": null,
              "is-verified": true,
              "avatar-uploaded": null,
              "icon": null
            },
            "type": "user",
            "id": "1",
            "links": {
              "self": "/v1/users/1"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/users/1"
          }
        }

### Delete User [DELETE]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "message": "Object successfully deleted"
          },
          "jsonapi": {
            "version": "1.0"
          }
        }

## Image Size Collection [/image-sizes?page,limit]

### List Image Sizes [GET]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "count": 1
          },
          "data": [
            {
              "attributes": {
                "full-width": 1300,
                "full-height": 500,
                "full-aspect": null,
                "full-quality": 80,
                "icon-width": 75,
                "icon-height": 30,
                "icon-aspect": null,
                "icon-quality": 80,
                "thumbnail-width": 500,
                "thumbnail-height": 200,
                "thumbnail-aspect": null,
                "thumbnail-quality": 80,
                "logo-width": null,
                "logo-height": null
              },
              "type": "image-size",
              "id": "1",
              "links": {
                "self": "/v1/image-sizes/1"
              }
            }
          ],
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/image-sizes"
          }
        }


### Create Image Size [POST]

 (For Events and Speakers)
+ full-width (integer)- Full width of the image
+ full-height (integer)- Full height of the image
+ full-aspect (string)- Full aspect ratio of the image
+ full-quality (integer)- Full quality of the image
+ icon-width (integer)- Width of the icon
+ icon-height (integer)- Height of the icon
+ icon-aspect (string)- Aspect ratio of the icon
+ icon-quality (integer)- Quality of the icon
+ thumbnail-width (integer)- Width of the thumbnail
+ thumbnail-height (integer)- Height of the thumbnail
+ thumbnail-aspect (string)- Aspect ratio of the thumbnail
+ thumbnail-quality (integer)- Quality of the thumbnail
+ logo-width (integer)- Width of the logo
+ logo-height (integer)- Height of the logo 


+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>
        
    + Body
    
            {
              "data": {
                "attributes": {
                  "created-at": "2017-06-01T01:24:47.500127+00:00",
                  "google": null,
                  "instagram": null,
                  "firstname": null,
                  "lastname": null,
                  "twitter": null,
                  "signup-at": "2017-06-01T01:25:07.385816+00:00",
                  "is-super-admin": true,
                  "thumbnail": null,
                  "email": "me@ipiyush.com",
                  "avatar": null,
                  "contact": null,
                  "is-admin": true,
                  "details": null,
                  "last-accessed-at": null,
                  "small": null,
                  "facebook": null,
                  "deleted-at": null,
                  "is-verified": true,
                  "avatar-uploaded": null,
                  "icon": null
                },
                "type": "image-size"
              }
            }

+ Response 200 (application/vnd.api+json)

        {
          "data": "data"
        }

## Image Size Details [/image-sizes/{image_size_id}]
+ Parameters
    + image_size_id (integer) - ID of the image size in the form of an integer

### Get Image Size Details [GET]
+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "attributes": {
              "full-width": 1300,
              "full-height": 500,
              "full-aspect": null,
              "full-quality": 80,
              "icon-width": 75,
              "icon-height": 30,
              "icon-aspect": null,
              "icon-quality": 80,
              "thumbnail-width": 500,
              "thumbnail-height": 200,
              "thumbnail-aspect": null,
              "thumbnail-quality": 80,
              "logo-width": null,
              "logo-height": null
            },
            "type": "image-size",
            "id": "1",
            "links": {
              "self": "/v1/image-sizes/1"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/image-sizes/1"
          }
        }

        
### Update Image Size [PATCH]


+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>
        
    + Body
    
            {
              "data": {
                "attributes": {
                  "full-width": 1300,
                  "full-height": 500,
                  "full-aspect": null,
                  "full-quality": 80,
                  "icon-width": 75,
                  "icon-height": 30,
                  "icon-aspect": null,
                  "icon-quality": 80,
                  "thumbnail-width": 500,
                  "thumbnail-height": 200,
                  "thumbnail-aspect": null,
                  "thumbnail-quality": 80,
                  "logo-width": null,
                  "logo-height": null
                },
                "type": "image-size",
                "id": "1",
              }
            }

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "attributes": {
              "full-width": 1300,
              "full-height": 500,
              "full-aspect": null,
              "full-quality": 80,
              "icon-width": 75,
              "icon-height": 30,
              "icon-aspect": null,
              "icon-quality": 80,
              "thumbnail-width": 500,
              "thumbnail-height": 200,
              "thumbnail-aspect": null,
              "thumbnail-quality": 80,
              "logo-width": null,
              "logo-height": null
            },
            "type": "image-size",
            "id": "1",
            "links": {
              "self": "/v1/image-sizes/1"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/image-sizes/1"
          }
        }

### Delete Image Size [DELETE]

+ Request

    + Headers
    
            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "message": "Object successfully deleted"
          },
          "jsonapi": {
            "version": "1.0"
          }
        }


## Page Collection [/pages?page,limit]

### Page Sizes [GET]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "count": 1
          },
          "data": [
            {
              "attributes": {
                "name": "How it works",
                "title": "How it works",
                "url": "/how-it-works",
                "description": null,
                "place": "Use Open Event",
                "language": "English",
                "index": 0
              },
              "type": "image-size",
              "id": "1",
              "links": {
                "self": "/v1/image-sizes/1"
              }
            }
          ],
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/pages"
          }
        }


### Create Page [POST]

 (For Events and Speakers)
+ name (string)- Name of the page **(required)**
+ title (string)- Title of the page 
+ url (url)- Url of the page **(required)**
+ description (string) - Description of the page
+ language (string)- Language of the page
+ index (integer)- Position of the page, default: 0

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>
        
    + Body
    
            {
              "data": {
                "attributes": {
                  "name": "How it works",
                  "title": "How it works",
                  "url": "/how-it-works",
                  "description": null,
                  "place": "Use Open Event",
                  "language": "English",
                  "index": 0
                },
                "type": "page"
              }
            }

+ Response 200 (application/vnd.api+json)

        {
          "data": "data"
        }

## Page Details [/pages/{page_id}]
+ Parameters
    + page_id (integer) - ID of the page in the form of an integer
    
### Get Page Details [GET]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "attributes": {
              "name": "How it works",
              "title": "How it works",
              "url": "/how-it-works",
              "description": null,
              "place": "Use Open Event",
              "language": "English",
              "index": 0
            },
            "type": "page",
            "id": "1",
            "links": {
              "self": "/v1/pages/1"
            }

          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/pages/1"
          }
        }

        
### Update Page [PATCH]

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>
        
    + Body
    
            {
              "data": {
                "attributes": {
                  "name": "How it works",
                  "title": "How it works",
                  "url": "/how-it-works",
                  "description": null,
                  "place": "Use Open Event",
                  "language": "English",
                  "index": 0
                },
                "type": "page",
                "id": "1"
              }
            }

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "attributes": {
              "name": "How it works",
              "title": "How it works",
              "url": "/how-it-works",
              "description": null,
              "place": "Use Open Event",
              "language": "English",
              "index": 0
            },
            "type": "pages",
            "id": "1",
            "links": {
              "self": "/v1/pages/1"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/pages/1"
          }
        }

### Delete Page [DELETE]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "message": "Object successfully deleted"
          },
          "jsonapi": {
            "version": "1.0"
          }
        }

## Tracks Collection [/events/{event_id}/tracks]
+ Parameters
    + event_id (integer) - ID of the event in the form of an integer

### List All Tracks [GET]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
            'body': 'body'
        }

### Create Track [POST]

+ name (string) - The name of the track **(required)**
+ description (string) - Description of the track
+ track-image-url (string) - URL of uploaded track image
+ color (string) - Color code of the track **(required)**
+ location (string) - Name of the location of track

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>
        
    + Body
    
            {
              "data": {
                "attributes": {
                    "name" : "name ",
                    "description": "description",
                    "track-image-url": "track-image-url",
                    "color": "color",
                    "location": "location"
                },
                "type": "track",
                "id": "1",
              }
            }

+ Response 200 (application/vnd.api+json)
        
        {
            "data": "data"
        }
        

### Track Deatil [/tracks/{track_id}]
+ Parameters
    + track_id (integer) - ID of the track in the form of an integer
    
### Get Details [GET]
+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
            "data": {
                "attributes": {
                    "name" : "name ",
                    "description": "description",
                    "track-image-url": "track-image-url",
                    "color": "color",
                    "location": "location"
                },
                "type": "track",
                "id": "1",
                "links": {
                  "self": "/v1/tracks/1"
                }
            },
            "jsonapi": {
                "version": "1.0"
            },
            "links": {
                "self": "/v1/tracks/1"
            }
        }

        
### Update Track [PATCH]

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>
        
    + Body

    
            {
              "data": {
                "attributes": {
                    "name" : "name ",
                    "description": "description",
                    "track-image-url": "track-image-url",
                    "color": "color",
                    "location": "location"
                },
                "type": "track",
                "id": "1",
              }
            }

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "attributes": {
                "name" : "name ",
                "description": "description",
                "track-image-url": "track-image-url",
                "color": "color",
                "location": "location"
            },
            "type": "track",
            "id": "1",
            "links": {
              "self": "/v1/tracks/1"
            },
            "jsonapi": {
                "version": "1.0"
            }
          }
        }

### Delete Track [DELETE]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "message": "Object successfully deleted"
          },
          "jsonapi": {
            "version": "1.0"
          }
        }


## Sponsors Collection [/events/{event_id}/sponsors?page,limit]
+ Parameters
    + event_id (integer) - ID of the spcific event in integer

### List All Sponsors [GET]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "count": 1
          },
          "data": [
            {
              "relationships": {
                "event": {
                  "links": {
                    "self": "/v1/sponsors/1/relationships/event",
                    "related": "/v1/sponsors/1/event"
                  }
                }
              },
              "attributes": {
                "description": "Some Description",
                "level": "Level",
                "url": "http://example.com",
                "type": "Type",
                "logo-url": "http://placehold.it/200X200",
                "name": "New Brand"
              },
              "type": "sponsor",
              "id": "1",
              "links": {
                "self": "/v1/sponsors/1"
              }
            }
          ],
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/sponsors"
          }
        }


### Create Sponsor [POST]

+ name (string) - Name of the user **(required)**
+ description (string) - Description of the sponsor
+ url (string in proper URL) - Url of the sponsor
+ level (string) - Level of the sponsor
+ type (string) - The type of the sponsor

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>
        
    + Body
    
            {
              "data": {
                "attributes": {
                  "name": "Open Event Sponsor",
                  "description": "Example Description",
                  "url": "http://example.com",
                  "level": "Example",
                  "type": "Gold"
                },
                "type": "sponsor"
              }
            }


+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/sponsors/5/relationships/event",
                  "related": "/v1/sponsors/5/event"
                }
              }
            },
            "attributes": {
              "description": "Example Description",
              "level": "Example",
              "url": "http://example.com",
              "logo-url": null,
              "type": "Gold",
              "name": "Open Event Sponsor"
            },
            "type": "sponsor",
            "id": "5",
            "links": {
              "self": "/v1/sponsors/5"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/sponsors/5"
          }
        }
        

## Sponsor Details [/sponsors/{sponsor_id}]
+ Parameters
    + sponsor_id (integer) - ID of the sponsor in the form of an integer

### Sponsor Details [GET]
+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/sponsors/5/relationships/event",
                  "related": "/v1/sponsors/5/event"
                }
              }
            },
            "attributes": {
              "description": "Example Description",
              "level": "Example",
              "url": "http://example.com",
              "logo-url": null,
              "type": "Gold",
              "name": "Open Event Sponsor"
            },
            "type": "sponsor",
            "id": "5",
            "links": {
              "self": "/v1/sponsors/5"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/sponsors/5"
          }
        }

        
### Update Sponsor [PATCH]

+ id (integer) - ID of the record to update **(required)**

+ name (string) - Name of the user **(optional)**
+ description (string) - Description of the sponsor **(optional)**
+ url (string in proper URL) - Url of the sponsor **(optional)**
+ level (string) - Level of the sponsor **(optional)**
+ type (string) - The type of the sponsor **(optional)**

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>
        
    + Body
    
            {
              "data": {
                "attributes": {
                  "description": "Example Description",
                  "url": "http://example.com",
                  "level": "Example",
                  "type": "Gold",
                  "name": "New Open Event Sponsor"
                },
                "type": "sponsor",
                "id": "5"
              }
            }

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/sponsors/5/relationships/event",
                  "related": "/v1/sponsors/5/event"
                }
              }
            },
            "attributes": {
              "description": "Example Description",
              "level": "Example",
              "url": "http://example.com",
              "logo-url": null,
              "type": "Gold",
              "name": "New Open Event Sponsor"
            },
            "type": "sponsor",
            "id": "5",
            "links": {
              "self": "/v1/sponsors/5"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/sponsors/5"
          }
        }

### Delete Sponsor [DELETE]


+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "message": "Object successfully deleted"
          },
          "jsonapi": {
            "version": "1.0"
          }
        }

## Tax Collection [/events/{event_id}/tax?page,limit]
+ Parameters
    + event_id (integer) - ID of the spcific event in integer

### List All Tax Records [GET]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "count": 1
          },
          "data": [
            {
              "relationships": {
                "event": {
                  "links": {
                    "self": "/v1/tax/1/relationships/event",
                    "related": "/v1/tax/1/event"
                  }
                }
              },
              "attributes": {
                "city": null,
                "zip": null,
                "is-invoice-sent": false,
                "country": null,
                "is-tax-included-in-price": false,
                "invoice-footer": null,
                "state": null,
                "tax-id": "1",
                "tax-name": "Service Tax",
                "registered-company": null,
                "address": null,
                "tax-rate": 12.0
              },
              "type": "tax",
              "id": "1",
              "links": {
                "self": "/v1/tax/1"
              }
            }
          ],
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/events/1/tax"
          }
        }


### Create Tax [POST]

+ country (string)  -  Country of Tax
+ tax-name (string) - Name of the Tax**(required)**
+ tax-rate (float)  - Tax charges rate**(required)**
+ tax-id (string)  - A string based ID **(required)**
+ is-invoice-sent (boolean) - **(default=False)**
+ registered-company (string) - Registered Cmpany Name
+ address (string) - Address of the company
+ city (string) - City of the company
+ state (string) - State of the Company
+ zip (Integer) - Zip Code of the Company
+ invoice-footer (string) - A text to add on the footer
+ is-tax-included-in-price (boolean) - **(default=False)**

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>
        
    + Body
    
            {
              "data": {
                "attributes": {
                  "tax-name": "Service Tax",
                  "tax-rate": "12",
                  "tax-id": "1"
                },
                "type": "tax"
              }
            }

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/tax/1/relationships/event",
                  "related": "/v1/tax/1/event"
                }
              }
            },
            "attributes": {
              "city": null,
              "zip": null,
              "is-invoice-sent": false,
              "country": null,
              "is-tax-included-in-price": false,
              "invoice-footer": null,
              "state": null,
              "tax-id": "1",
              "tax-name": "Service Tax",
              "registered-company": null,
              "address": null,
              "tax-rate": 12.0
            },
            "type": "tax",
            "id": "1",
            "links": {
              "self": "/v1/tax/1"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/tax/1"
          }
        }
        

## Tax Details [/tax/{tax_id}]
+ Parameters
    + tax_id (integer) - ID of the Tax in the form of an integer

### Tax Details [GET]
+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/tax/1/relationships/event",
                  "related": "/v1/tax/1/event"
                }
              }
            },
            "attributes": {
              "city": null,
              "zip": null,
              "is-invoice-sent": false,
              "country": null,
              "is-tax-included-in-price": false,
              "invoice-footer": null,
              "state": null,
              "tax-id": "1",
              "tax-name": "Service Tax",
              "registered-company": null,
              "address": null,
              "tax-rate": 12.0
            },
            "type": "tax",
            "id": "1",
            "links": {
              "self": "/v1/tax/1"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/tax/1"
          }
        }

        
### Update Tax [PATCH]

+ id (integer) - ID of the record to update **(required)**

+ country (string)  -  Country of Tax**(optional)**
+ tax-name (string) - Name of the Tax**(optional)**
+ tax-rate (float)  - Tax charges rate**(optional)**
+ tax-id (string)  - A string based ID **(optional)**
+ is-invoice-sent (boolean) - **(optional)**
+ registered-company (string) - Registered Cmpany Name**(optional)**
+ address (string) - Address of the company**(optional)**
+ city (string) - City of the company**(optional)**
+ state (string) - State of the Company**(optional)**
+ zip (Integer) - Zip Code of the Company**(optional)**
+ invoice-footer (string) - A text to add on the footer**(optional)**
+ is-tax-included-in-price (boolean) - **(optional)**

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>
        
    + Body
    
            {
              "data": {
                "attributes": {
                  "tax-rate": "15",
                  "tax-name": "GST"
                },
                "type": "tax",
                "id": "1"
              }
            }

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/tax/1/relationships/event",
                  "related": "/v1/tax/1/event"
                }
              }
            },
            "attributes": {
              "city": null,
              "zip": null,
              "is-invoice-sent": false,
              "country": null,
              "is-tax-included-in-price": false,
              "invoice-footer": null,
              "state": null,
              "tax-id": "1",
              "tax-name": "GST",
              "registered-company": null,
              "address": null,
              "tax-rate": 15.0
            },
            "type": "tax",
            "id": "1",
            "links": {
              "self": "/v1/tax/1"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/tax/1"
          }
        }

### Delete Tax [DELETE]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "message": "Object successfully deleted"
          },
          "jsonapi": {
            "version": "1.0"
          }
        }


## Social Links Collection [/events/{event_id}/social-links?page,limit]
+ Parameters
    + event_id (integer) - ID of the spcific event in integer

### List All Social Links [GET]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "count": 1
          },
          "data": [
            {
              "relationships": {
                "event": {
                  "links": {
                    "self": "/v1/social-links/1/relationships/event",
                    "related": "/v1/social-links/1/event"
                  }
                }
              },
              "attributes": {
                "link": "http://facebook.com/facebook",
                "name": "Facebook Url"
              },
              "type": "social-link",
              "id": "1",
              "links": {
                "self": "/v1/social-links/1"
              }
            }
          ],
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/events/1/social-links"
          }
        }

### Create Social Link [POST]

+ name (string) - Name of Social Link **(required)**
+ link (string - proper url) - Url of the Social Link **(required)**

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>
        
    + Body
    
            {
              "data": {
                "attributes": {
                  "name": "Facebook Url",
                  "link": "http://facebook.com/facebook"
                },
                "type": "social-link"
              }
            }

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/social-links/1/relationships/event",
                  "related": "/v1/social-links/1/event"
                }
              }
            },
            "attributes": {
              "link": "http://facebook.com/facebook",
              "name": "Facebook Url"
            },
            "type": "social-link",
            "id": "1",
            "links": {
              "self": "/v1/social-links/1"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/social-links/1"
          }
        }


## Social Links [/social-links/{link_id}]
+ Parameters
    + link_id (integer) - ID of the Social Link in the form of an integer

### Social Link Detail [GET]
+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/social-links/1/relationships/event",
                  "related": "/v1/social-links/1/event"
                }
              }
            },
            "attributes": {
              "link": "http://facebook.com/facebook",
              "name": "Facebook Url"
            },
            "type": "social-link",
            "id": "1",
            "links": {
              "self": "/v1/social-links/1"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/social-links/1"
          }
        }

        
### Update Social Link [PATCH]

+ id (integer) - ID of the record to update **(required)**

+ name (string) - Name of Social Link **(optional)**
+ link (string - proper url) - Url of the Social Link **(optional)**

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>
        
    + Body
    
            {
              "data": {
                "attributes": {
                  "name": "Facebook Page Url",
                  "link": "http://facebook.com/facebook"
                },
                "type": "social-link",
                "id": "1"
              }
            }

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/social-links/1/relationships/event",
                  "related": "/v1/social-links/1/event"
                }
              }
            },
            "attributes": {
              "link": "http://facebook.com/facebook",
              "name": "Facebook Page Url"
            },
            "type": "social-link",
            "id": "1",
            "links": {
              "self": "/v1/social-links/1"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/social-links/1"
          }
        }

### Delete Social Link [DELETE]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "message": "Object successfully deleted"
          },
          "jsonapi": {
            "version": "1.0"
          }
        }
