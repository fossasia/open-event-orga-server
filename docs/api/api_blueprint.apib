FORMAT: V1
HOST: http://nextgen.eventyay.com

# Orga-Server

The Open Event API Server

## JWT Auth Key [/auth/session]

### JWT Auth Key [POST]

+ Request

    + Headers

            Content-Type: application/json
 
    + Body

            {
                "email": "email@example.com",
                "password": "password"
            }

+ Response 200 (application/json)

        {
            "access_token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZGVudGl0eSI6MSwiaWF0IjoxNDk2OTU2ODMwLCJuYmYiOjE0OTY5NTY4MzAsImV4cCI6MTQ5NzA0MzIzMH0.bjl0"
        }

## Users Collection [/users?page,limit]

### List All Users [GET]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "count": 1
          },
          "data": [
            {
              "attributes": {
                "created-at": "2017-06-01T01:24:47.500127+00:00",
                "google": null,
                "instagram": null,
                "firstname": null,
                "lastname": null,
                "twitter": null,
                "signup-at": "2017-06-01T01:25:07.385816+00:00",
                "is-super-admin": true,
                "thumbnail": null,
                "email": "me@ipiyush.com",
                "avatar": null,
                "contact": null,
                "is-admin": true,
                "details": null,
                "last-accessed-at": null,
                "small": null,
                "facebook": null,
                "deleted-at": null,
                "is-verified": true,
                "avatar-uploaded": null,
                "icon": null
              },
              "type": "user",
              "id": "1",
              "links": {
                "self": "/v1/users/1"
              }
            }
          ],
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/users"
          }
        }


### Create User [POST]

+ name (string) - Name of the user
+ passowrd (string) - Password of the user **(required)**
+ email (string) - Email of the user **(required)**

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>
        
    + Body

            {
              "data": {
                "attributes": {
                  "name": "Open Event User",
                  "email": "example@example.com",
                  "password": "12345678"
                },
                "type": "user"
              }
            }

+ Response 200 (application/vnd.api+json)

        {
            "data": {
                "attributes": {
                "name": "Open Event User",
                "email": "example@example.com",
                "password": "12345678"
                },
                "type": "user"
            }
        }

## User Details [/users/{user_id}]
+ Parameters
    + user_id (integer) - ID of the user in the form of an integer

### Get Details [GET]
+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "attributes": {
              "created-at": "2017-06-01T01:24:47.500127+00:00",
              "google": null,
              "instagram": null,
              "firstname": null,
              "lastname": null,
              "twitter": null,
              "signup-at": "2017-06-01T01:25:07.385816+00:00",
              "is-super-admin": true,
              "thumbnail": null,
              "email": "me@ipiyush.com",
              "avatar": null,
              "contact": null,
              "is-admin": true,
              "details": null,
              "last-accessed-at": null,
              "small": null,
              "facebook": null,
              "deleted-at": null,
              "is-verified": true,
              "avatar-uploaded": null,
              "icon": null
            },
            "type": "user",
            "id": "1",
            "links": {
              "self": "/v1/users/1"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/users/1"
          }
        }

        
### Update User [PATCH]

Authorized user should be same as user in request body or must be admin.

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>
        
    + Body
    
            {
              "data": {
                "attributes": {
                  "name": "Open Event User",
                  "email": "example@example.com",
                  "password": "12345678"
                },
                "type": "user"
              }
            }

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "attributes": {
              "created-at": "2017-06-01T01:24:47.500127+00:00",
              "google": null,
              "instagram": null,
              "firstname": null,
              "lastname": null,
              "twitter": null,
              "signup-at": "2017-06-01T01:25:07.385816+00:00",
              "is-super-admin": true,
              "thumbnail": null,
              "email": "me@ipiyush.com",
              "avatar": null,
              "contact": null,
              "is-admin": true,
              "details": null,
              "last-accessed-at": null,
              "small": null,
              "facebook": null,
              "deleted-at": null,
              "is-verified": true,
              "avatar-uploaded": null,
              "icon": null
            },
            "type": "user",
            "id": "1",
            "links": {
              "self": "/v1/users/1"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/users/1"
          }
        }

### Delete User [DELETE]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "message": "Object successfully deleted"
          },
          "jsonapi": {
            "version": "1.0"
          }
        }

## Settings Details [/settings?page,limit]

### Show Settings[GET]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "attributes": {
              "app-environment": "production",
              "app-name": "Event Yay!",
              "tagline": "Event Management and Ticketing",
              "secret": null,
              "storage-place": null,
              "aws-key": null,
              "aws-secret": null,
              "aws-bucket-name": null,
              "aws-region": null,
              "gs-key": null,
              "gs-secret": null,
              "gs-bucket-name": null,
              "google-client-id":null,
              "google-client-secret": null,
              "fb-client-id": null,
              "fb-client-secret": null,
              "tw-consumer-key": null,
              "tw-consumer-secret": null,
              "in-client-id": null,
              "in-client-secret": null,
              "stripe-client-id": null,
              "stripe-secret-key": null,
              "stripe-publishable-key": null,
              "paypal-mode": null,
              "paypal-sandbox-username": null,
              "paypal-sandbox-password": null,
              "paypal-sandbox-signature": null,
              "paypal-live-username": null,
              "paypal-live-password": null,
              "paypal-live-signature": null,
              "email-service": null,
              "email-from": null,
              "email-from-name": null,
              "sendgrid-key": null,
              "smtp-host": null,
              "smtp-username":null,
              "smtp-password": null,
              "smtp-port": null,
              "smtp-encryption": null,
              "analytics-key": null,
              "google-url": null,
              "github-url": null,
              "twitter-url": null,
              "support-url": null,
              "facebook-url": null,
              "youtube-url": null,
              "android-app-url": null,
              "web-app-url": null
            },
            "type": "setting",
            "id": "1",
            "links": {
              "self": "/v1/settings?id=1"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/settings?id=1"
          }
        }

### Update Settings [POST]

**(All string)**

**General**
+ app-environment: App Environment (Eg. Production, testing) **(ADMIN)**
+ app-name: Name of the application. (Eg. Event Yay!, Open Event) **(NON ADMIN)**
+ tagline: Tagline for the application. (Eg. Event Management and Ticketing, Home) **(NON ADMIN)**
+ secret: App Secret **(ADMIN)**

**STORAGE**
+ storage-place = Storage of App (storage place, local, s3) **(ADMIN)**

(S3)
+ aws-key: Amazon Web Services key **(ADMIN)**
+ aws-secret: Amazon Web Services secret **(ADMIN)**
+ aws-bucket-name: Amazon Web Services bucket name **(ADMIN)**
+ aws-region: Amazon Web Services region **(ADMIN)**

(Google Storage)
+ gs-key: Google Storage key **(ADMIN)**
+ gs-secret: Google Storage secret **(ADMIN)**
+ gs-bucket-name: Google Storage bucket name **(ADMIN)**

**Social Login**
(Google Auth)
+ google-client-id: Google client id **(ADMIN)**
+ google-client-secret: Google client secret **(ADMIN)**

(FB)
+ fb-client-id: Facebook client id **(ADMIN)**
+ fb-client-secret: Facebook client secret **(ADMIN)**

(Twitter)
+ tw-consumer-key: Twitter client id **(ADMIN)**
+ tw-consumer-secret: Twitter client secret **(ADMIN)**

(Instagram)
+ in-client-id: Instagram client id **(ADMIN)**
+ in-client-secret: Instagram client secret **(ADMIN)**

**Payment Gateway**
(Stripe Keys)
+ stripe-client-id: Stripe client id **(ADMIN)**
+ stripe-secret-key: Stripe secret key **(ADMIN)**
+ stripe-publishable-key: Stripe publishable key **(ADMIN)**

(PayPal Credentials)
+ paypal-mode: Paypal mode **(ADMIN)**
+ paypal-sandbox-username: Paypal sandbox username **(ADMIN)**
+ paypal-sandbox-password: Paypal sandbox password **(ADMIN)**
+ paypal-sandbox-signature: Paypal sandbox signature **(ADMIN)**
+ paypal-live-username: Paypal live username **(ADMIN)**
+ paypal-live-password: Paypal live password **(ADMIN)**
+ paypal-live-signature: Paypal live signature **(ADMIN)**

**EMAIL**
(Email service)
+ email-service: Email service **(ADMIN)**
+ email-from: Email from **(ADMIN)**
+ email-from-name: Email Sender name **(ADMIN)**

(Sendgrid)
+ sendgrid-key: Sendgrid key **(ADMIN)**
  
(SMTP)
+ smtp-host: smtp host **(ADMIN)**
+ smtp-username: smtp  username **(ADMIN)**
+ smtp-password: smtp password **(ADMIN)**
+ smtp-port: smtp port **(ADMIN)**
+ smtp-encryption : smtp encryption **(ADMIN)** 
    
**Google Analytics**
+ analytics-key = Google analytics key **(NON ADMIN)**

**Social links**
+ google-url: Google url **(ADMIN)**
+ github-url: Github url **(ADMIN)**
+ twitter-url: Twitter url **(ADMIN)**
+ support-url: Support url **(ADMIN)**
+ facebook-url: Facebook url **(ADMIN)**
+ youtube-url: Youtube url **(ADMIN)**

**Generators**
+ android-app-url: Android app url **(ADMIN)**
+ web-app-url: Web App url **(ADMIN)**

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>

    + Body
    
            {
              "data": {
                "attributes": {
                  "app-environment": "production",
                  "app-name": "Event Yay!",
                  "tagline": "Event Management and Ticketing",
                  "secret": null,
                  "storage-place": null,
                  "aws-key": null,
                  "aws-secret": null,
                  "aws-bucket-name": null,
                  "aws-region": null,
                  "gs-key": null,
                  "gs-secret": null,
                  "gs-bucket-name": null,
                  "google-client-id":null,
                  "google-client-secret": null,
                  "fb-client-id": null,
                  "fb-client-secret": null,
                  "tw-consumer-key": null,
                  "tw-consumer-secret": null,
                  "in-client-id": null,
                  "in-client-secret": null,
                  "stripe-client-id": null,
                  "stripe-secret-key": null,
                  "stripe-publishable-key": null,
                  "paypal-mode": null,
                  "paypal-sandbox-username": null,
                  "paypal-sandbox-password": null,
                  "paypal-sandbox-signature": null,
                  "paypal-live-username": null,
                  "paypal-live-password": null,
                  "paypal-live-signature": null,
                  "email-service": null,
                  "email-from": null,
                  "email-from-name": null,
                  "sendgrid-key": null,
                  "smtp-host": null,
                  "smtp-username":null,
                  "smtp-password": null,
                  "smtp-port": null,
                  "smtp-encryption": null,
                  "analytics-key": null,
                  "google-url": null,
                  "github-url": null,
                  "twitter-url": null,
                  "support-url": null,
                  "facebook-url": null,
                  "youtube-url": null,
                  "android-app-url": null,
                  "web-app-url": null
                },
                "type": "setting",
                "id": "1"
              }
            }


+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "attributes": {
              "app-environment": "production",
              "app-name": "Event Yay!",
              "tagline": "Event Management and Ticketing",
              "secret": null,
              "storage-place": null,
              "aws-key": null,
              "aws-secret": null,
              "aws-bucket-name": null,
              "aws-region": null,
              "gs-key": null,
              "gs-secret": null,
              "gs-bucket-name": null,
              "google-client-id":null,
              "google-client-secret": null,
              "fb-client-id": null,
              "fb-client-secret": null,
              "tw-consumer-key": null,
              "tw-consumer-secret": null,
              "in-client-id": null,
              "in-client-secret": null,
              "stripe-client-id": null,
              "stripe-secret-key": null,
              "stripe-publishable-key": null,
              "paypal-mode": null,
              "paypal-sandbox-username": null,
              "paypal-sandbox-password": null,
              "paypal-sandbox-signature": null,
              "paypal-live-username": null,
              "paypal-live-password": null,
              "paypal-live-signature": null,
              "email-service": null,
              "email-from": null,
              "email-from-name": null,
              "sendgrid-key": null,
              "smtp-host": null,
              "smtp-username":null,
              "smtp-password": null,
              "smtp-port": null,
              "smtp-encryption": null,
              "analytics-key": null,
              "google-url": null,
              "github-url": null,
              "twitter-url": null,
              "support-url": null,
              "facebook-url": null,
              "youtube-url": null,
              "android-app-url": null,
              "web-app-url": null
            },
            "type": "setting",
            "id": "1",
            "links": {
              "self": "/v1/settings?id=1"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/settings?id=1"
          }
        }

## Image Size Collection [/image-sizes?page,limit]

### List Image Sizes [GET]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "count": 1
          },
          "data": [
            {
              "attributes": {
                "full-width": 1300,
                "full-height": 500,
                "full-aspect": null,
                "full-quality": 80,
                "icon-width": 75,
                "icon-height": 30,
                "icon-aspect": null,
                "icon-quality": 80,
                "thumbnail-width": 500,
                "thumbnail-height": 200,
                "thumbnail-aspect": null,
                "thumbnail-quality": 80,
                "logo-width": null,
                "logo-height": null
              },
              "type": "image-size",
              "id": "1",
              "links": {
                "self": "/v1/image-sizes/1"
              }
            }
          ],
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/image-sizes"
          }
        }


### Create Image Size [POST]

 (For Events and Speakers)
+ full-width (integer)- Full width of the image
+ full-height (integer)- Full height of the image
+ full-aspect (string)- Full aspect ratio of the image
+ full-quality (integer)- Full quality of the image
+ icon-width (integer)- Width of the icon
+ icon-height (integer)- Height of the icon
+ icon-aspect (string)- Aspect ratio of the icon
+ icon-quality (integer)- Quality of the icon
+ thumbnail-width (integer)- Width of the thumbnail
+ thumbnail-height (integer)- Height of the thumbnail
+ thumbnail-aspect (string)- Aspect ratio of the thumbnail
+ thumbnail-quality (integer)- Quality of the thumbnail
+ logo-width (integer)- Width of the logo
+ logo-height (integer)- Height of the logo 


+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>
        
    + Body
    
            {
              "data": {
                "attributes": {
                  "full-width": 1300,
                  "full-height": 500,
                  "full-aspect": null,
                  "full-quality": 80,
                  "icon-width": 75,
                  "icon-height": 30,
                  "icon-aspect": null,
                  "icon-quality": 80,
                  "thumbnail-width": 500,
                  "thumbnail-height": 200,
                  "thumbnail-aspect": null,
                  "thumbnail-quality": 80,
                  "logo-width": null,
                  "logo-height": null
                },
                "type": "image-size"
              }
            }

+ Response 200 (application/vnd.api+json)

        {
          "data": "data"
        }

## Image Size Details [/image-sizes/{image_size_id}]
+ Parameters
    + image_size_id (integer) - ID of the image size in the form of an integer

### Get Image Size Details [GET]
+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "attributes": {
              "full-width": 1300,
              "full-height": 500,
              "full-aspect": null,
              "full-quality": 80,
              "icon-width": 75,
              "icon-height": 30,
              "icon-aspect": null,
              "icon-quality": 80,
              "thumbnail-width": 500,
              "thumbnail-height": 200,
              "thumbnail-aspect": null,
              "thumbnail-quality": 80,
              "logo-width": null,
              "logo-height": null
            },
            "type": "image-size",
            "id": "1",
            "links": {
              "self": "/v1/image-sizes/1"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/image-sizes/1"
          }
        }

        
### Update Image Size [PATCH]

+ id (integer) - ID of the record to update **(required)**

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>
        
    + Body
    
            {
              "data": {
                "attributes": {
                  "full-width": 1300,
                  "full-height": 500,
                  "full-aspect": null,
                  "full-quality": 80,
                  "icon-width": 75,
                  "icon-height": 30,
                  "icon-aspect": null,
                  "icon-quality": 80,
                  "thumbnail-width": 500,
                  "thumbnail-height": 200,
                  "thumbnail-aspect": null,
                  "thumbnail-quality": 80,
                  "logo-width": null,
                  "logo-height": null
                },
                "type": "image-size",
                "id": "1",
              }
            }

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "attributes": {
              "full-width": 1300,
              "full-height": 500,
              "full-aspect": null,
              "full-quality": 80,
              "icon-width": 75,
              "icon-height": 30,
              "icon-aspect": null,
              "icon-quality": 80,
              "thumbnail-width": 500,
              "thumbnail-height": 200,
              "thumbnail-aspect": null,
              "thumbnail-quality": 80,
              "logo-width": null,
              "logo-height": null
            },
            "type": "image-size",
            "id": "1",
            "links": {
              "self": "/v1/image-sizes/1"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/image-sizes/1"
          }
        }

### Delete Image Size [DELETE]

+ Request

    + Headers
    
            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "message": "Object successfully deleted"
          },
          "jsonapi": {
            "version": "1.0"
          }
        }


## Page Collection [/pages?page,limit]

### Page Sizes [GET]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "count": 1
          },
          "data": [
            {
              "attributes": {
                "name": "How it works",
                "title": "How it works",
                "url": "/how-it-works",
                "description": null,
                "place": "Use Open Event",
                "language": "English",
                "index": 0
              },
              "type": "image-size",
              "id": "1",
              "links": {
                "self": "/v1/image-sizes/1"
              }
            }
          ],
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/pages"
          }
        }


### Create Page [POST]

+ name (string)- Name of the page **(required)**
+ title (string)- Title of the page 
+ url (url)- Url of the page **(required)**
+ description (string) - Description of the page
+ language (string)- Language of the page
+ index (integer)- Position of the page, default: 0

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>
        
    + Body
    
            {
              "data": {
                "attributes": {
                  "name": "How it works",
                  "title": "How it works",
                  "url": "/how-it-works",
                  "description": null,
                  "place": "Use Open Event",
                  "language": "English",
                  "index": 0
                },
                "type": "page"
              }
            }

+ Response 200 (application/vnd.api+json)

        {
          "data": "data"
        }

## Page Details [/pages/{page_id}]
+ Parameters
    + page_id (integer) - ID of the page in the form of an integer
    
### Get Page Details [GET]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "attributes": {
              "name": "How it works",
              "title": "How it works",
              "url": "/how-it-works",
              "description": null,
              "place": "Use Open Event",
              "language": "English",
              "index": 0
            },
            "type": "page",
            "id": "1",
            "links": {
              "self": "/v1/pages/1"
            }

          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/pages/1"
          }
        }

        
### Update Page [PATCH]

+ id (integer) - ID of the record to update **(required)**

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>
        
    + Body
    
            {
              "data": {
                "attributes": {
                  "name": "How it works",
                  "title": "How it works",
                  "url": "/how-it-works",
                  "description": null,
                  "place": "Use Open Event",
                  "language": "English",
                  "index": 0
                },
                "type": "page",
                "id": "1"
              }
            }

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "attributes": {
              "name": "How it works",
              "title": "How it works",
              "url": "/how-it-works",
              "description": null,
              "place": "Use Open Event",
              "language": "English",
              "index": 0
            },
            "type": "page",
            "id": "1",
            "links": {
              "self": "/v1/pages/1"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/pages/1"
          }
        }

### Delete Page [DELETE]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "message": "Object successfully deleted"
          },
          "jsonapi": {
            "version": "1.0"
          }
        }

## Tracks Collection [/events/{event_id}/tracks]
+ Parameters
    + event_id (integer) - ID of the event in the form of an integer

### List All Tracks [GET]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
            'body': 'body'
        }

### Create Track [POST]

+ name (string) - The name of the track **(required)**
+ description (string) - Description of the track
+ track-image-url (string) - URL of uploaded track image
+ color (string) - Color code of the track **(required)**
+ location (string) - Name of the location of track

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>
        
    + Body
    
            {
              "data": {
                "attributes": {
                    "name" : "name ",
                    "description": "description",
                    "track-image-url": "track-image-url",
                    "color": "color",
                    "location": "location"
                },
                "type": "track",
                "id": "1",
              }
            }

+ Response 200 (application/vnd.api+json)
        
        {
            "data": "data"
        }
        

### Track Deatil [/tracks/{track_id}]
+ Parameters
    + track_id (integer) - ID of the track in the form of an integer
    
### Get Details [GET]
+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
            "data": {
                "attributes": {
                    "name" : "name ",
                    "description": "description",
                    "track-image-url": "track-image-url",
                    "color": "color",
                    "location": "location"
                },
                "type": "track",
                "id": "1",
                "links": {
                  "self": "/v1/tracks/1"
                }
            },
            "jsonapi": {
                "version": "1.0"
            },
            "links": {
                "self": "/v1/tracks/1"
            }
        }

        
### Update Track [PATCH]

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>
        
    + Body

    
            {
              "data": {
                "attributes": {
                    "name" : "name ",
                    "description": "description",
                    "track-image-url": "track-image-url",
                    "color": "color",
                    "location": "location"
                },
                "type": "track",
                "id": "1",
              }
            }

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "attributes": {
                "name" : "name ",
                "description": "description",
                "track-image-url": "track-image-url",
                "color": "color",
                "location": "location"
            },
            "type": "track",
            "id": "1",
            "links": {
              "self": "/v1/tracks/1"
            },
            "jsonapi": {
                "version": "1.0"
            }
          }
        }

### Delete Track [DELETE]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "message": "Object successfully deleted"
          },
          "jsonapi": {
            "version": "1.0"
          }
        }

## Sponsors Collection [/events/{event_id}/sponsors?page,limit]
+ Parameters
    + event_id (integer) - ID of the spcific event in integer

### List All Sponsors [GET]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "count": 1
          },
          "data": [
            {
              "relationships": {
                "event": {
                  "links": {
                    "self": "/v1/sponsors/1/relationships/event",
                    "related": "/v1/sponsors/1/event"
                  }
                }
              },
              "attributes": {
                "description": "Some Description",
                "level": "Level",
                "url": "http://example.com",
                "type": "Type",
                "logo-url": "http://placehold.it/200X200",
                "name": "New Brand"
              },
              "type": "sponsor",
              "id": "1",
              "links": {
                "self": "/v1/sponsors/1"
              }
            }
          ],
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/sponsors"
          }
        }


### Create Sponsor [POST]

+ name (string) - Name of the user **(required)**
+ description (string) - Description of the sponsor
+ url (string in proper URL) - Url of the sponsor
+ level (string) - Level of the sponsor
+ type (string) - The type of the sponsor

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>
        
    + Body
    
            {
              "data": {
                "attributes": {
                  "name": "Open Event Sponsor",
                  "description": "Example Description",
                  "url": "http://example.com",
                  "level": "Example",
                  "type": "Gold"
                },
                "type": "sponsor"
              }
            }


+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/sponsors/5/relationships/event",
                  "related": "/v1/sponsors/5/event"
                }
              }
            },
            "attributes": {
              "description": "Example Description",
              "level": "Example",
              "url": "http://example.com",
              "logo-url": null,
              "type": "Gold",
              "name": "Open Event Sponsor"
            },
            "type": "sponsor",
            "id": "5",
            "links": {
              "self": "/v1/sponsors/5"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/sponsors/5"
          }
        }
        

## Sponsor Details [/sponsors/{sponsor_id}]
+ Parameters
    + sponsor_id (integer) - ID of the sponsor in the form of an integer

### Sponsor Details [GET]
+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/sponsors/5/relationships/event",
                  "related": "/v1/sponsors/5/event"
                }
              }
            },
            "attributes": {
              "description": "Example Description",
              "level": "Example",
              "url": "http://example.com",
              "logo-url": null,
              "type": "Gold",
              "name": "Open Event Sponsor"
            },
            "type": "sponsor",
            "id": "5",
            "links": {
              "self": "/v1/sponsors/5"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/sponsors/5"
          }
        }

        
### Update Sponsor [PATCH]

+ id (integer) - ID of the record to update **(required)**

+ name (string) - Name of the user **(optional)**
+ description (string) - Description of the sponsor **(optional)**
+ url (string in proper URL) - Url of the sponsor **(optional)**
+ level (string) - Level of the sponsor **(optional)**
+ type (string) - The type of the sponsor **(optional)**

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>
        
    + Body
    
            {
              "data": {
                "attributes": {
                  "description": "Example Description",
                  "url": "http://example.com",
                  "level": "Example",
                  "type": "Gold",
                  "name": "New Open Event Sponsor"
                },
                "type": "sponsor",
                "id": "5"
              }
            }

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/sponsors/5/relationships/event",
                  "related": "/v1/sponsors/5/event"
                }
              }
            },
            "attributes": {
              "description": "Example Description",
              "level": "Example",
              "url": "http://example.com",
              "logo-url": null,
              "type": "Gold",
              "name": "New Open Event Sponsor"
            },
            "type": "sponsor",
            "id": "5",
            "links": {
              "self": "/v1/sponsors/5"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/sponsors/5"
          }
        }

### Delete Sponsor [DELETE]


+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "message": "Object successfully deleted"
          },
          "jsonapi": {
            "version": "1.0"
          }
        }

## Tax Collection [/events/{event_id}/tax?page,limit]
+ Parameters
    + event_id (integer) - ID of the spcific event in integer

### List All Tax Records [GET]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "count": 1
          },
          "data": [
            {
              "relationships": {
                "event": {
                  "links": {
                    "self": "/v1/tax/1/relationships/event",
                    "related": "/v1/tax/1/event"
                  }
                }
              },
              "attributes": {
                "city": null,
                "zip": null,
                "is-invoice-sent": false,
                "country": null,
                "is-tax-included-in-price": false,
                "invoice-footer": null,
                "state": null,
                "tax-id": "1",
                "tax-name": "Service Tax",
                "registered-company": null,
                "address": null,
                "tax-rate": 12.0
              },
              "type": "tax",
              "id": "1",
              "links": {
                "self": "/v1/tax/1"
              }
            }
          ],
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/events/1/tax"
          }
        }


### Create Tax [POST]

+ country (string)  -  Country of Tax
+ tax-name (string) - Name of the Tax**(required)**
+ tax-rate (float)  - Tax charges rate**(required)**
+ tax-id (string)  - A string based ID **(required)**
+ is-invoice-sent (boolean) - **(default=False)**
+ registered-company (string) - Registered Cmpany Name
+ address (string) - Address of the company
+ city (string) - City of the company
+ state (string) - State of the Company
+ zip (Integer) - Zip Code of the Company
+ invoice-footer (string) - A text to add on the footer
+ is-tax-included-in-price (boolean) - **(default=False)**

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>
        
    + Body
    
            {
              "data": {
                "attributes": {
                  "tax-name": "Service Tax",
                  "tax-rate": "12",
                  "tax-id": "1"
                },
                "type": "tax"
              }
            }

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/tax/1/relationships/event",
                  "related": "/v1/tax/1/event"
                }
              }
            },
            "attributes": {
              "city": null,
              "zip": null,
              "is-invoice-sent": false,
              "country": null,
              "is-tax-included-in-price": false,
              "invoice-footer": null,
              "state": null,
              "tax-id": "1",
              "tax-name": "Service Tax",
              "registered-company": null,
              "address": null,
              "tax-rate": 12.0
            },
            "type": "tax",
            "id": "1",
            "links": {
              "self": "/v1/tax/1"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/tax/1"
          }
        }
        

## Tax Details [/tax/{tax_id}]
+ Parameters
    + tax_id (integer) - ID of the Tax in the form of an integer

### Tax Details [GET]
+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/tax/1/relationships/event",
                  "related": "/v1/tax/1/event"
                }
              }
            },
            "attributes": {
              "city": null,
              "zip": null,
              "is-invoice-sent": false,
              "country": null,
              "is-tax-included-in-price": false,
              "invoice-footer": null,
              "state": null,
              "tax-id": "1",
              "tax-name": "Service Tax",
              "registered-company": null,
              "address": null,
              "tax-rate": 12.0
            },
            "type": "tax",
            "id": "1",
            "links": {
              "self": "/v1/tax/1"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/tax/1"
          }
        }

        
### Update Tax [PATCH]

+ id (integer) - ID of the record to update **(required)**

+ country (string)  -  Country of Tax**(optional)**
+ tax-name (string) - Name of the Tax**(optional)**
+ tax-rate (float)  - Tax charges rate**(optional)**
+ tax-id (string)  - A string based ID **(optional)**
+ is-invoice-sent (boolean) - **(optional)**
+ registered-company (string) - Registered Cmpany Name**(optional)**
+ address (string) - Address of the company**(optional)**
+ city (string) - City of the company**(optional)**
+ state (string) - State of the Company**(optional)**
+ zip (Integer) - Zip Code of the Company**(optional)**
+ invoice-footer (string) - A text to add on the footer**(optional)**
+ is-tax-included-in-price (boolean) - **(optional)**

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>
        
    + Body
    
            {
              "data": {
                "attributes": {
                  "tax-rate": "15",
                  "tax-name": "GST"
                },
                "type": "tax",
                "id": "1"
              }
            }

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/tax/1/relationships/event",
                  "related": "/v1/tax/1/event"
                }
              }
            },
            "attributes": {
              "city": null,
              "zip": null,
              "is-invoice-sent": false,
              "country": null,
              "is-tax-included-in-price": false,
              "invoice-footer": null,
              "state": null,
              "tax-id": "1",
              "tax-name": "GST",
              "registered-company": null,
              "address": null,
              "tax-rate": 15.0
            },
            "type": "tax",
            "id": "1",
            "links": {
              "self": "/v1/tax/1"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/tax/1"
          }
        }

### Delete Tax [DELETE]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "message": "Object successfully deleted"
          },
          "jsonapi": {
            "version": "1.0"
          }
        }


## Social Links Collection [/events/{event_id}/social-links?page,limit]
+ Parameters
    + event_id (integer) - ID of the spcific event in integer

### List All Social Links [GET]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "count": 1
          },
          "data": [
            {
              "relationships": {
                "event": {
                  "links": {
                    "self": "/v1/social-links/1/relationships/event",
                    "related": "/v1/social-links/1/event"
                  }
                }
              },
              "attributes": {
                "link": "http://facebook.com/facebook",
                "name": "Facebook Url"
              },
              "type": "social-link",
              "id": "1",
              "links": {
                "self": "/v1/social-links/1"
              }
            }
          ],
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/events/1/social-links"
          }
        }

### Create Social Link [POST]

+ name (string) - Name of Social Link **(required)**
+ link (string - proper url) - Url of the Social Link **(required)**

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>
        
    + Body
    
            {
              "data": {
                "attributes": {
                  "name": "Facebook Url",
                  "link": "http://facebook.com/facebook"
                },
                "type": "social-link"
              }
            }

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/social-links/1/relationships/event",
                  "related": "/v1/social-links/1/event"
                }
              }
            },
            "attributes": {
              "link": "http://facebook.com/facebook",
              "name": "Facebook Url"
            },
            "type": "social-link",
            "id": "1",
            "links": {
              "self": "/v1/social-links/1"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/social-links/1"
          }
        }


## Social Links [/social-links/{link_id}]
+ Parameters
    + link_id (integer) - ID of the Social Link in the form of an integer

### Social Link Detail [GET]
+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/social-links/1/relationships/event",
                  "related": "/v1/social-links/1/event"
                }
              }
            },
            "attributes": {
              "link": "http://facebook.com/facebook",
              "name": "Facebook Url"
            },
            "type": "social-link",
            "id": "1",
            "links": {
              "self": "/v1/social-links/1"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/social-links/1"
          }
        }

        
### Update Social Link [PATCH]

+ id (integer) - ID of the record to update **(required)**

+ name (string) - Name of Social Link **(optional)**
+ link (string - proper url) - Url of the Social Link **(optional)**

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>
        
    + Body
    
            {
              "data": {
                "attributes": {
                  "name": "Facebook Page Url",
                  "link": "http://facebook.com/facebook"
                },
                "type": "social-link",
                "id": "1"
              }
            }

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/social-links/1/relationships/event",
                  "related": "/v1/social-links/1/event"
                }
              }
            },
            "attributes": {
              "link": "http://facebook.com/facebook",
              "name": "Facebook Page Url"
            },
            "type": "social-link",
            "id": "1",
            "links": {
              "self": "/v1/social-links/1"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/social-links/1"
          }
        }

### Delete Social Link [DELETE]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "message": "Object successfully deleted"
          },
          "jsonapi": {
            "version": "1.0"
          }
        }

## Tickets Collection [/events/{event_id}/tickets?page,limit]
+ Parameters
    + event_id (integer) - ID of the spcific event in integer

### List All Tickets [GET]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "count": 1
          },
          "data": [
            {
              "relationships": {
                "event": {
                  "links": {
                    "self": "/v1/tickets/1/relationships/event",
                    "related": "/v1/tickets/1/event"
                  }
                }
              },
              "attributes": {
                "name": "ticket-name",
                "description": "some description",
                "type": "VIP-ticket",
                "price": 100.00,
                "quantity": 100,
                "description-toggle": False,
                "position": null,
                "is-fee-absorbed": null,
                "sales-starts-at": "2017-06-01T01:24:47.500127+00:00",
                "sales-ends-at": "2017-06-30T00:24:47.500127+00:00",
                "is-hidden": False,
                "min-order": 1,
                "max-order": 100
              },
              "type": "ticket",
              "id": "1",
              "links": {
                "self": "/v1/tickets/1"
              }
            }
          ],
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/tickets"
          }
        }


### Create Ticket [POST]

+ name (string) - Name of the ticket **(required)**
+ type (string) - Type of the ticket **(required)**
+ description (string) - Description of the ticket **(optional)**
+ price (float) - Price of the ticket **(optional)**
+ quantity (integer) - Total quantity of tickets **(optional)**
+ description-toggle (boolean) - Yes/No to enter description **(optional)**
+ position (integer) - Position of the ticket **(optional)**
+ is-fee-absorbed (boolean) - Yes/No for ticket absorption **(optional)**
+ sales-starts-at (datetime) - Start date of ticket sale **(optional)**
+ sales-ends-at (datetime) - End date of ticket sale **(optional)**
+ is-hidden (boolean) - Yes/No to hide ticket **(optional)**
+ min-order (integer) - Min order of the ticket **(optional)**
+ max-order (integer) - Max order of the ticket **(optional)**

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>

    + Body
    
            {
              "data": {
                "attributes": {
                  "name": "ticket-name",
                  "description": "some description",
                  "type": "VIP-ticket",
                  "price": 100.00,
                  "quantity": 100,
                  "description-toggle": false,
                  "position": null,
                  "is-fee-absorbed": null,
                  "sales-starts-at": "2017-06-01T01:24:47.500127+00:00",
                  "sales-ends-at": "2017-06-30T00:24:47.500127+00:00",
                  "is-hidden": false,
                  "min-order": 1,
                  "max-order": 100
                },
                "type": "ticket"
              }
            }


+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/tickets/2/relationships/event",
                  "related": "/v1/tickets/2/event"
                }
              }
            },
            "attributes": {
              "name": "ticket name",
              "description": "some description",
              "type": "VIP ticket",
              "price": 100.00,
              "quantity": 100,
              "description-toggle": false,
              "position": null,
              "is-fee-absorbed": null,
              "sales-starts-at": "2017-06-01T01:24:47.500127+00:00",
              "sales-ends-at": "2017-06-30T00:24:47.500127+00:00",
              "is-hidden": false,
              "min-order": 1,
              "max-order": 100
            },
            "type": "ticket",
            "id": "2",
            "links": {
              "self": "/v1/tickets/2"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/tickets/2"
          }
        }
        

## Ticket Details [/tickets/{ticket_id}]
+ Parameters
    + ticket_id (integer) - ID of the ticket in the form of an integer

### Ticket Details [GET]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/tickets/2/relationships/event",
                  "related": "/v1/tickets/2/event"
                }
              }
            },
            "attributes": {
              "name": "ticket name",
              "description": "some description",
              "type": "VIP ticket",
              "price": 100.00,
              "quantity": 100,
              "description-toggle": false,
              "position": null,
              "is-fee-absorbed": null,
              "sales-starts-at": "2017-06-01T01:24:47.500127+00:00",
              "sales-ends-at": "2017-06-30T00:24:47.500127+00:00",
              "is-hidden": false,
              "min-order": 1,
              "max-order": 100
            },
            "type": "ticket",
            "id": "2",
            "links": {
              "self": "/v1/tickets/2"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/tickets/2"
          }
        }

        
### Update Ticket [PATCH]

+ id (integer) - ID of the record to update **(required)**
+ name (string) - Name of the ticket **(optional)**
+ type (string) - Type of the ticket **(optional)**
+ description (string) - Description of the ticket **(optional)**
+ price (float) - Price of the ticket **(optional)**
+ quantity (integer) - Total quantity of tickets **(optional)**
+ description-toggle (boolean) - Yes/No to enter description **(optional)**
+ position (integer) - Position of the ticket **(optional)**
+ is-fee-absorbed (boolean) - Yes/No for ticket absorption **(optional)**
+ sales-starts-at (datetime) - Start date of ticket sale **(optional)**
+ sales-ends-at (datetime) - End date of ticket sale **(optional)**
+ is-hidden (boolean) - Yes/No to hide ticket **(optional)**
+ min-order (integer) - Min order of the ticket **(optional)**
+ max-order (integer) - Max order of the ticket **(optional)**

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>

    + Body

            {
              "data": {
                "attributes": {
                  "name": "ticket name",
                  "description": "some description",
                  "type": "VIP ticket",
                  "price": 100.00,
                  "quantity": 100,
                  "description-toggle": false,
                  "position": null,
                  "is-fee-absorbed": null,
                  "sales-starts-at": "2017-06-01T01:24:47.500127+00:00",
                  "sales-ends-at": "2017-06-30T00:24:47.500127+00:00",
                  "is-hidden": false,
                  "min-order": 1,
                  "max-order": 100
                },
                "type": "ticket",
                "id": "2"
              }
            }

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/tickets/2/relationships/event",
                  "related": "/v1/tickets/2/event"
                }
              }
            },
            "attributes": {
              "name": "ticket name",
              "description": "some description",
              "type": "VIP ticket",
              "price": 100.00,
              "quantity": 100,
              "description-toggle": false,
              "position": null,
              "is-fee-absorbed": null,
              "sales-starts-at": "2017-06-01T01:24:47.500127+00:00",
              "sales-ends-at": "2017-06-30T00:24:47.500127+00:00",
              "is-hidden": false,
              "min-order": 1,
              "max-order": 100
            },
            "type": "ticket",
            "id": "2",
            "links": {
              "self": "/v1/tickets/2"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/tickets/2"
          }
        }

### Delete Ticket [DELETE]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "message": "Object successfully deleted"
          },
          "jsonapi": {
            "version": "1.0"
          }
        }

## Microlocation Collection [/events/{event_id}/microlocations?page,limit]
+ Parameters
    + event_id (integer) - ID of the spcific event in integer

### List All Microlocations [GET]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "count": 1
          },
          "data": [
            {
              "relationships": {
                "event": {
                  "links": {
                    "self": "/v1/microlocations/1/relationships/event",
                    "related": "/v1/microlocations/1/event"
                  }
                },
                 "sessions": {
                  "links": {
                    "self": "/v1/microlocations/1/relationships/sessions",
                    "related": "/v1/microlocations/1/sessions"
                  }
                }
              },
              "attributes": {
                "name": "microlocation-name",
                "latitude": null,
                "longitude": null,
                "floor": 2,
                "room": "room1"
              },
              "type": "microlocation",
              "id": "1",
              "links": {
                "self": "/v1/microlocations/1"
              }
            }
          ],
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/microlocations"
          }
        }


### Create Microlocation [POST]

+ name (string) - Name of the microlocation **(required)**
+ latitude (float) - Latitude of the microlocation **(optional)**
+ longitude (float) - Longitude of the microlocation **(optional)**
+ floor (integer) - Floor of the microlocation **(optional)**
+ room (string) - Room of the microlocation **(optional)**

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>

    + Body
    
            {
              "data": {
                "attributes": {
                  "name": "microlocation-name",
                  "latitude": null,
                  "longitude": null,
                  "floor": 2,
                  "room": "room1"
                },
                "type": "microlocation"
              }
            }


+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/microlocations/1/relationships/event",
                  "related": "/v1/microlocations/1/event"
                }
              },
              "sessions": {
                "links": {
                  "self": "/v1/microlocations/1/relationships/sessions",
                  "related": "/v1/microlocations/1/sessions"
                }
              }
            },
            "attributes": {
              "name": "microlocation-name",
              "latitude": null,
              "longitude": null,
              "floor": 2,
              "room": "room1"
            },
            "type": "microlocation",
            "id": "1",
            "links": {
              "self": "/v1/microlocations/1"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/microlocations/1"
          }
        }
        

## Microlocation Details [/microlocations/{microlocation_id}]
+ Parameters
    + microlocation_id (integer) - ID of the ticket in the form of an integer

### Mictolocation Details [GET]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/microlocations/1/relationships/event",
                  "related": "/v1/microlocations/1/event"
                }
              },
              "sessions": {
                "links": {
                  "self": "/v1/microlocations/1/relationships/sessions",
                  "related": "/v1/microlocations/1/sessions"
                }
              }
            },
            "attributes": {
              "name": "microlocation-name",
              "latitude": null,
              "longitude": null,
              "floor": 2,
              "room": "room1"
            },
            "type": "microlocation",
            "id": "2",
            "links": {
              "self": "/v1/microlocations/1"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/microlocations/1"
          }
        }

        
### Update Microlocation [PATCH]

+ id (integer) - ID of the record to update **(required)**
+ name (string) - Name of the microlocation **(optional)**
+ latitude (float) - Latitude of the microlocation **(optional)**
+ longitude (float) - Longitude of the microlocation **(optional)**
+ floor (integer) - Floor of the microlocation **(optional)**
+ room (string) - Room of the microlocation **(optional)**

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>

    + Body

            {
              "data": {
                "attributes": {
                  "name": "microlocation-name",
                  "latitude": null,
                  "longitude": null,
                  "floor": 2,
                  "room": "room1"
                },
                "type": "microlocation",
                "id": "1"
              }
            }

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/microlocations/1/relationships/event",
                  "related": "/v1/microlocations/1/event"
                }
              },
              "sessions": {
                "links": {
                  "self": "/v1/microlocations/1/relationships/sessions",
                  "related": "/v1/microlocations/1/sessions"
                }
              }
            },
            "attributes": {
              "name": "microlocation-name",
              "latitude": null,
              "longitude": null,
              "floor": 2,
              "room": "room1"
            },
            "type": "microlocation",
            "id": "1",
            "links": {
              "self": "/v1/microlocations/1"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/microlocations/1"
          }
        }

### Delete Microlocation [DELETE]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "message": "Object successfully deleted"
          },
          "jsonapi": {
            "version": "1.0"
          }
        }


## Event Copyright [/events/{event_id}/event-copyright?page,limit]
+ Parameters
    + event_id (integer) - ID of the spcific event in integer

### Get Event Copyright [GET]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "count": 1
          },
          "data": [
            {
              "relationships": {
                "event": {
                  "links": {
                    "self": "/v1/event-copyright/1/relationships/event",
                    "related": "/v1/event-copyright/1/event"
                  }
                }
              },
              "attributes": {
                "holder": "Name of Holder",
                "holder-url": "URL for holder",
                "licence": "Licence text",
                "licence-url": "Licence URL",
                "year": "Copyright validity year",
                "logo-url": "New Brand"
              },
              "type": "event-copyright",
              "id": "1",
              "links": {
                "self": "/v1/event-copyright/1"
              }
            }
          ],
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/event-copyright"
          }
        }


### Create Event Copyright [POST]

+ holder (string) - Holder Name **(optional)**
+ holder-url (string in proper URL) - URL of the Holder **(optional)**
+ licence (string) - Licence text **(optional)**
+ licence-url (string in proper URL) - URL of the Licence **(optional)**
+ year (string) - Year till which you have copyright **(optional)**
+ logo-url (string) - URL of the logo for the Licence **(optional)**

+ Request (application/vnd.api+json)

    + Headers

            Authorization: JWT <Auth Key>

    + Body

            {
              "data": {
                "attributes": {
                  "holder": "Name of Holder",
                  "holder-url": "URL for holder",
                  "licence": "Licence text",
                  "licence-url": "Licence URL",
                  "year": "Copyright validity year",
                  "logo-url": "New Brand"
                },
                "type": "event-copyright"
              }
            }


+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/event-copyright/5/relationships/event",
                  "related": "/v1/event-copyright/5/event"
                }
              }
            },
            "attributes": {
              "holder": "Name of Holder",
              "holder-url": "URL for holder",
              "licence": "Licence text",
              "licence-url": "Licence URL",
              "year": "Copyright validity year",
              "logo-url": "New Brand"
            },
            "type": "event-copyright",
            "id": "5",
            "links": {
              "self": "/v1/event-copyright/5"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/event-copyright/5"
          }
        }


## Event Copyright Details [/event-copyright/{event_copyright_id}]
+ Parameters
    + event_copyright_id (integer) - ID of the event copyright in the form of an integer

### Event Copyright Details [GET]
+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/event-copyright/5/relationships/event",
                  "related": "/v1/event-copyright/5/event"
                }
              }
            },
            "attributes": {
              "holder": "Name of Holder",
              "holder-url": "URL for holder",
              "licence": "Licence text",
              "licence-url": "Licence URL",
              "year": "Copyright validity year",
              "logo-url": "New Brand"
            },
            "type": "event-copyright",
            "id": "5",
            "links": {
              "self": "/v1/event-copyright/5"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/event-copyright/5"
          }
        }


### Update Event Copyright [PATCH]

+ id (integer) - ID of the record to update **(required)**

+ holder (string) - Holder Name **(optional)**
+ holder-url (string in proper URL) - URL of the Holder **(optional)**
+ licence (string) - Licence text **(optional)**
+ licence-url (string in proper URL) - URL of the Licence **(optional)**
+ year (string) - Year till which you have copyright **(optional)**
+ logo-url (string) - URL of the logo for the Licence **(optional)**

+ Request (application/vnd.api+json)

    + Headers

            Authorization: JWT <Auth Key>

    + Body

            {
              "data": {
                "attributes": {
                  "holder": "Name of Holder1",
                  "holder-url": "URL for holder1",
                  "licence": "Licence text",
                  "licence-url": "Licence URL",
                  "year": "Copyright validity year",
                  "logo-url": "New Brand"
                },
                "type": "event-copyright",
                "id": 5
              }
            }

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/event-copyright/5/relationships/event",
                  "related": "/v1/event-copyright/5/event"
                }
              }
            },
            "attributes": {
              "holder": "Name of Holder1",
              "holder-url": "URL for holder1",
              "licence": "Licence text",
              "licence-url": "Licence URL",
              "year": "Copyright validity year",
              "logo-url": "New Brand"
            },
            "type": "event-copyright",
            "id": "5",
            "links": {
              "self": "/v1/event-copyright/5"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/event-copyright/5"
          }
        }

### Delete Event Copyright [DELETE]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "message": "Object successfully deleted"
          },
          "jsonapi": {
            "version": "1.0"
          }
        }


## Event Invoices [/events/{event_id}/event-invoices?page,limit]
+ Parameters
    + event_id (integer) - ID of the spcific event in integer

### Get Event Invoices [GET]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "count": 1
          },
          "data": [
            {
              "relationships": {
                "event": {
                  "links": {
                    "self": "/v1/event-invoices/1/relationships/event",
                    "related": "/v1/event-invoices/1/event"
                  }
                },
                "user": {
                  "links": {
                    "self": "/v1/event-invoices/1/relationships/user",
                    "related": "/v1/event-invoices/1/user"
                  }
                }
              },
              "attributes": {
                "status": "pending",
                "city": null,
                "identifier": "3fe1aa02-34dd-41ea-a0a9-f7a0259b90b5",
                "paypal-token": null,
                "exp-year": null,
                "transaction-id": null,
                "country": null,
                "brand": null,
                "created-at": "2017-06-08T11:24:57.344803+00:00",
                "zipcode": null,
                "payment-mode": null,
                "stripe-token": null,
                "last4": null,
                "state": null,
                "address": null,
                "exp-month": null,
                "amount": 100.0,
                "completed-at": null,
                "paid-via": null
              },
              "type": "event-invoice",
              "id": "1",
              "links": {
                "self": "/v1/event-invoices/1"
              }
            }
          ],
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/event-invoices"
          }
        }


### Create Event Invoices [POST]

+ status (string) - Status of event order **(optional)**
+ identifier (string) - Unique ID for the invoice **(optional)**
+ paypal-token (string) - Paypal Token for the event organizer **(optional)**
+ transaction-id (string) - ID for Transaction **(optional)**
+ brand (string) - Brand for event invoice **(optional)**
+ created-at (datetime) - Time of creation of order **(optional)**
+ payment-mode (string) - Payment Mode **(optional)**
+ stripe-token (string) - Stripe Token for the event organizer **(optional)**
+ last4 (string) **(optional)**
+ address (string) - Billing Address **(optional)**
+ city (string) - City for Billing Address **(optional)**
+ state (string) - State for Billing Address **(optional)**
+ country (string)- Country for Billing Address **(optional)**
+ zipcode (string) - Zipcode for Billing Address **(optional)**
+ exp-month (integer) - Expiring Month **(optional)**
+ exp-year (integer) - Expiring Year  **(optional)**
+ amount (float) - Amount of the order **(optional)**
+ completed-at (datetime) -Completion of Invoice Order **(optional)**
+ paid-via (string) - Payment procedure **(optional)**

+ Request (application/vnd.api+json)

    + Headers

            Authorization: JWT <Auth Key>

    + Body

            {
              "data": {
                "attributes": {
                  "status": "pending",
                  "identifier": "3fe1aa02-34dd-41ea-a0a9-f7a0259b90b5",
                  "paypal-token": null,
                  "exp-year": null,
                  "transaction-id": null,
                  "brand": null,
                  "created-at": "2017-06-08T11:24:57.344803+00:00",
                  "payment-mode": null,
                  "stripe-token": null,
                  "last4": null,
                  "address": null,
                  "city": null,
                  "state": null,
                  "country": "India",
                  "zipcode": null,
                  "exp-month": null,
                  "amount": 500.0,
                  "completed-at": null,
                  "paid-via": null
                },
                "type": "event-invoice"
              }
            }


+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/event-invoices/5/relationships/event",
                  "related": "/v1/event-invoices/5/event"
                }
              }
            },
            "attributes": {
              "status": "pending",
              "city": "India",
              "identifier": "3fe1aa02-34dd-41ea-a0a9-f7a0259b90b5",
              "paypal-token": null,
              "exp-year": null,
              "transaction-id": null,
              "country": null,
              "brand": null,
              "created-at": "2017-06-08T11:24:57.344803+00:00",
              "zipcode": null,
              "payment-mode": null,
              "stripe-token": null,
              "last4": null,
              "state": null,
              "address": null,
              "exp-month": null,
              "amount": 500.0,
              "completed-at": null,
              "paid-via": null
            },
            "type": "event-invoice",
            "id": "5",
            "links": {
              "self": "/v1/event-invoices/5"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/event-invoices/5"
          }
        }


## Event Invoices Details [/event-invoices/{event_invoices_id}]
+ Parameters
    + event_invoices_id (integer) - ID of the event invoices in the form of an integer

### Event Invoices Details [GET]
+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/event-invoices/5/relationships/event",
                  "related": "/v1/event-invoices/5/event"
                }
              }
            },
            "attributes": {
              "status": "pending",
              "city": "India",
              "identifier": "3fe1aa02-34dd-41ea-a0a9-f7a0259b90b5",
              "paypal-token": null,
              "exp-year": null,
              "transaction-id": null,
              "country": null,
              "brand": null,
              "created-at": "2017-06-08T11:24:57.344803+00:00",
              "zipcode": null,
              "payment-mode": null,
              "stripe-token": null,
              "last4": null,
              "state": null,
              "address": null,
              "exp-month": null,
              "amount": 500.0,
              "completed-at": null,
              "paid-via": null
            },
            "type": "event-invoice",
            "id": "5",
            "links": {
              "self": "/v1/event-invoices/5"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/event-invoices/5"
          }
        }


### Update Event Invoices [PATCH]

+ id (integer) - ID of the record to update **(required)**

+ status (string) - Status of event order **(optional)**
+ identifier (string) - Unique ID for the invoice **(optional)**
+ paypal-token (string) - Paypal Token for the event organizer **(optional)**
+ transaction-id (string) - ID for Transaction **(optional)**
+ brand (string) - Brand for event invoice **(optional)**
+ created-at (datetime) - Time of creation of order **(optional)**
+ payment-mode (string) - Payment Mode **(optional)**
+ stripe-token (string) - Stripe Token for the event organizer **(optional)**
+ last4 (string) **(optional)**
+ address (string) - Billing Address **(optional)**
+ city (string) - City for Billing Address **(optional)**
+ state (string) - State for Billing Address **(optional)**
+ country (string)- Country for Billing Address **(optional)**
+ zipcode (string) - Zipcode for Billing Address **(optional)**
+ exp-month (integer) - Expiring Month **(optional)**
+ exp-year (integer) - Expiring Year  **(optional)**
+ amount (float) - Amount of the order **(optional)**
+ completed-at (datetime) -Completion of Invoice Order **(optional)**
+ paid-via (string) - Payment procedure **(optional)**

+ Request (application/vnd.api+json)

    + Headers

            Authorization: JWT <Auth Key>

    + Body

            {
              "data": {
                "attributes": {
                  "status": "completed",
                  "identifier": "3fe1aa02-34dd-41ea-a0a9-f7a0259b90b5",
                  "paypal-token": null,
                  "exp-year": null,
                  "transaction-id": null,
                  "brand": null,
                  "created-at": "2017-06-08T11:24:57.344803+00:00",
                  "payment-mode": null,
                  "stripe-token": null,
                  "last4": null,
                  "address": null,
                  "city": null,
                  "state": null,
                  "country": "India",
                  "zipcode": null,
                  "exp-month": null,
                  "amount": 500.0,
                  "completed-at": null,
                  "paid-via": null
                },
                "type": "event-invoice",
                "id": 5
              }
            }

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/event-invoices/5/relationships/event",
                  "related": "/v1/event-invoices/5/event"
                }
              }
            },
            "attributes": {
              "status": "completed",
              "city": "India",
              "identifier": "3fe1aa02-34dd-41ea-a0a9-f7a0259b90b5",
              "paypal-token": null,
              "exp-year": null,
              "transaction-id": null,
              "country": null,
              "brand": null,
              "created-at": "2017-06-08T11:24:57.344803+00:00",
              "zipcode": null,
              "payment-mode": null,
              "stripe-token": null,
              "last4": null,
              "state": null,
              "address": null,
              "exp-month": null,
              "amount": 500.0,
              "completed-at": null,
              "paid-via": null
            },
            "type": "event-invoice",
            "id": "5",
            "links": {
              "self": "/v1/event-invoices/5"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/event-invoices/5"
          }
        }

### Delete Event Invoices [DELETE]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "message": "Object successfully deleted"
          },
          "jsonapi": {
            "version": "1.0"
          }
        }

## Speakers Call Collection [/events/{event_id}/speakers-calls?page,limit]
+ Parameters
    + event_id (integer) - ID of the spcific event in integer

### List All Speakers Calls [GET]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "count": 1
          },
          "data": [
            {
              "relationships": {
                "event": {
                  "links": {
                    "self": "/v1/speakers-calls/1/relationships/event",
                    "related": "/v1/speakers-calls/1/event"
                  }
                }
              },
              "attributes": {
                "announcement": "Speaker Call Announcement",
                "starts-at": "2017-06-01T01:24:47.500127+00:00",
                "ends-at": "2017-06-20T01:24:47.500127+00:00",
                "hash": null,
                "private": null
              },
              "type": "speakers-call",
              "id": "1",
              "links": {
                "self": "/v1/speakers-calls/1"
              }
            }
          ],
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/speakers-calls"
          }
        }


### Create Spearkers Call [POST]

+ announcement (string) - Announcement for speakers call **(required)**
+ starts-at (datetime) - Start date for speakers call **(required)**
+ ends-at (datetime) - End date for speakers call **(required)**
+ hash (string) - Hash for speakers call **(optional)**
+ privacy (string) - Privacy of speakers call **(optional)**

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>

    + Body
    
            {
              "data": {
                "attributes": {
                  "announcement": "Speaker Call Announcement",
                  "starts-at": "2017-06-01T01:24:47.500127+00:00",
                  "ends-at": "2017-06-20T01:24:47.500127+00:00",
                  "hash": null,
                  "private": null
                },
                "type": "speakers-call"
              }
            }


+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/speakers-calls/1/relationships/event",
                  "related": "/v1/speakers-calls/1/event"
                }
              }
            },
            "attributes": {
              "announcement": "Speaker Call Announcement",
              "starts-at": "2017-06-01T01:24:47.500127+00:00",
              "ends-at": "2017-06-20T01:24:47.500127+00:00",
              "hash": null,
              "private": null
            },
            "type": "speakers-call",
            "id": "1",
            "links": {
              "self": "/v1/speakers-calls/1"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/speaker-calls/1"
          }
        }
        

## Speakers Call Details [/speakers-calls/{speakers_call_id}]
+ Parameters
    + speakers_call_id (integer) - ID of the session in the form of an integer

### Speakers Call Details [GET]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/speakers-calls/1/relationships/event",
                  "related": "/v1/speakers-calls/1/event"
                }
              }
            },
            "attributes": {
              "announcement": "Speaker Call Announcement",
              "starts-at": "2017-06-01T01:24:47.500127+00:00",
              "ends-at": "2017-06-20T01:24:47.500127+00:00",
              "hash": null,
              "private": null
            },
            "type": "speakers-calls",
            "id": "1",
            "links": {
              "self": "/v1/speakers-calls/1"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/speakers-calls/1"
          }
        }

        
### Update Speakers Call [PATCH]

+ id (integer) - ID of the record to update **(required)**
+ announcement (string) - Announcement for speakers call **(optional)**
+ starts-at (datetime) - Start date for speakers call **(optional)**
+ ends-at (datetime) - End date for speakers call **(optional)**
+ hash (string) - Hash for speakers call **(optional)**
+ privacy (string) - Privacy of speakers call **(optional)**

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>

    + Body

            {
              "data": {
                "attributes": {
                  "announcement": "Speaker Call Announcement",
                  "starts-at": "2017-06-01T01:24:47.500127+00:00",
                  "ends-at": "2017-06-20T01:24:47.500127+00:00",
                  "hash": null,
                  "private": null
                },
                "type": "speakers-call",
                "id": "1"
              }
            }

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/speaker-calls/1/relationships/event",
                  "related": "/v1/speakers-calls/1/event"
                }
              },
            },
            "attributes": {
              "announcement": "Speaker Call Announcement",
              "starts-at": "2017-06-01T01:24:47.500127+00:00",
              "ends-at": "2017-06-20T01:24:47.500127+00:00",
              "hash": null,
              "private": null
            },
            "type": "speakers-call",
            "id": "1",
            "links": {
              "self": "/v1/speakers-call/1"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/speakers-calls/1"
          }
        }

### Delete Speakers Call [DELETE]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "message": "Object successfully deleted"
          },
          "jsonapi": {
            "version": "1.0"
          }
        }

## Sessions Collection [/events/{event_id}/sessions?page,limit]
+ Parameters
    + event_id (integer) - ID of the spcific event in integer

### List All Sessions [GET]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "count": 1
          },
          "data": [
            {
              "relationships": {
                "event": {
                  "links": {
                    "self": "/v1/sessions/21/relationships/event",
                    "related": "/v1/sessions/21/event"
                  }
                },
                "track": {
                  "links": {
                    "self": "/v1/sessions/21/relationships/track",
                    "related": "/v1/sessions/21/track"
                  }
                }, 
                "microlocation": {
                  "links": {
                    "self": "/v1/sessions/21/relationships/microlocation", 
                    "related": "/v1/sessions/21/microlocation"
                  }
                },
                "session-type": {
                  "links": {
                    "self": "/v1/sessions/21/relationships/session-type",
                    "related": "/v1/sessions/21/session-type"
                  }
                }
              },
              "attributes": {
                "title": "Micropython Session",
                "subtitle": null,
                "level": 1,
                "short-abstract": null,
                "long-abstract": null,
                "comments": null,
                "starts-at": "2017-06-01T10:00:00.500127+00:00",
                "ends-at": "2017-06-01T11:00:00.500127+00:00",
                "language": "English",
                "slides-url": null,
                "videos-url": null,
                "audios-url": null,
                "signup-url": null,
                "state": null,
                "created-at": "2017-05-01T01:24:47.500127+00:00",
                "deleted-at": null,
                "submitted-at": null,
                "is-mail-sent": false
              },
              "type": "session",
              "id": "21",
              "links": {
                "self": "/v1/sessions/21"
              }
            }
          ],
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/sessions"
          }
        }


### Create Sessions [POST]

+ title (string) - Title of the Session **(required)**
+ subtitle (string) - Subtitle of the Session **(optional)**
+ level (integer) - Level of the Session **(optional)**
+ short-abstract (string) - Short Abstract of the Session **(optional)**
+ long-abstract (string) - Long Abstract of the Session **(optional)**
+ comments (string) - COmments of the Session **(optional)**
+ starts-at (datetime) - Start date of the Session **(required)**
+ ends-at (datetime) - End date of the Session **(required)**
+ language (string) - Language of the Session **(optional)**
+ slides-url (string in proper url) - Slide Url of the Session **(optional)**
+ videos-url (string in proper url) - Video Url of the Session **(optional)**
+ audios-url (string in proper url) - Audio Url of the Session **(optional)**
+ signup-url (string in proper url) - Signup Url of the Session **(optional)**
+ state (string) - State of the Session **(optional)**
+ created-at (datetime) - Date the Session was created **(optional)**
+ deleted-at (datetime) - Date the Session was deleted **(optional)**
+ submitted-at (datetime) - Date the Session was submitted **(optional)**
+ is-mail-sent (boolean) - Yes/No for Session accept/reject email **(optional)**

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>

    + Body
    
            {
              "data": {
                "attributes": {
                  "title": "Micropython Session",
                  "subtitle": null,
                  "level": 1,
                  "short-abstract": null,
                  "long-abstract": null,
                  "comments": null,
                  "starts-at": "2017-06-01T10:00:00.500127+00:00",
                  "ends-at": "2017-06-01T11:00:00.500127+00:00",
                  "language": "English",
                  "slides-url": null,
                  "videos-url": null,
                  "audios-url": null,
                  "signup-url": null,
                  "state": null,
                  "created-at": "2017-05-01T01:24:47.500127+00:00",
                  "deleted-at": null,
                  "submitted-at": null,
                  "is-mail-sent": false
                },
                "type": "session"
              }
            }


+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/sessions/21/relationships/event",
                  "related": "/v1/sessions/21/event"
                }
              },
              "track": {
                "links": {
                  "self": "/v1/sessions/21/relationships/track",
                  "related": "/v1/sessions/21/track"
                }
              }, 
              "microlocation": {
                "links": {
                  "self": "/v1/sessions/21/relationships/microlocation", 
                  "related": "/v1/sessions/21/microlocation"
                }
              },
              "session-type": {
                "links": {
                  "self": "/v1/sessions/21/relationships/session-type",
                  "related": "/v1/sessions/21/session-type"
                }
              }
            },
            "attributes": {
              "title": "Micropython Session",
              "subtitle": null,
              "level": 1,
              "short-abstract": null,
              "long-abstract": null,
              "comments": null,
              "starts-at": "2017-06-01T10:00:00.500127+00:00",
              "ends-at": "2017-06-01T11:00:00.500127+00:00",
              "language": "English",
              "slides-url": null,
              "videos-url": null,
              "audios-url": null,
              "signup-url": null,
              "state": null,
              "created-at": "2017-05-01T01:24:47.500127+00:00",
              "deleted-at": null,
              "submitted-at": null,
              "is-mail-sent": false
            },
            "type": "session",
            "id": "21",
            "links": {
              "self": "/v1/sessions/21"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/sessions/21"
          }
        }
        

## Sessions Details [/sessions/{session_id}]
+ Parameters
    + session_id (integer) - ID of the speaker call in the form of an integer

### Session Details [GET]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/sessions/21/relationships/event",
                  "related": "/v1/sessions/21/event"
                }
              },
              "track": {
                "links": {
                  "self": "/v1/sessions/21/relationships/track",
                  "related": "/v1/sessions/21/track"
                }
              }, 
              "microlocation": {
                "links": {
                  "self": "/v1/sessions/21/relationships/microlocation", 
                  "related": "/v1/sessions/21/microlocation"
                }
              },
              "session-type": {
                "links": {
                  "self": "/v1/sessions/21/relationships/session-type",
                  "related": "/v1/sessions/21/session-type"
                }
              }
            },
            "attributes": {
              "title": "Micropython Session",
              "subtitle": null,
              "level": 1,
              "short-abstract": null,
              "long-abstract": null,
              "comments": null,
              "starts-at": "2017-06-01T10:00:00.500127+00:00",
              "ends-at": "2017-06-01T11:00:00.500127+00:00",
              "language": "English",
              "slides-url": null,
              "videos-url": null,
              "audios-url": null,
              "signup-url": null,
              "state": null,
              "created-at": "2017-05-01T01:24:47.500127+00:00",
              "deleted-at": null,
              "submitted-at": null,
              "is-mail-sent": false
            },
            "type": "session",
            "id": "1",
            "links": {
              "self": "/v1/sessions/1"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/sessions/1"
          }
        }

        
### Update Session [PATCH]

+ id (integer) - ID of the record to update **(required)**
+ title (string) - Title of the Session **(optional)**
+ subtitle (string) - Subtitle of the Session **(optional)**
+ level (integer) - Level of the Session **(optional)**
+ short-abstract (string) - Short Abstract of the Session **(optional)**
+ long-abstract (string) - Long Abstract of the Session **(optional)**
+ comments (string) - COmments of the Session **(optional)**
+ starts-at (datetime) - Start date of the Session **(optional)**
+ ends-at (datetime) - End date of the Session **(optional)**
+ language (string) - Language of the Session **(optional)**
+ slides-url (string in proper url) - Slide Url of the Session **(optional)**
+ videos-url (string in proper url) - Video Url of the Session **(optional)**
+ audios-url (string in proper url) - Audio Url of the Session **(optional)**
+ signup-url (string in proper url) - Signup Url of the Session **(optional)**
+ state (string) - State of the Session **(optional)**
+ created-at (datetime) - Date the Session was created **(optional)**
+ deleted-at (datetime) - Date the Session was deleted **(optional)**
+ submitted-at (datetime) - Date the Session was submitted **(optional)**
+ is-mail-sent (boolean) - Yes/No for Session accept/reject email **(optional)**

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>

    + Body

            {
              "data": {
                "attributes": {
                  "title": "Micropython Session",
                  "subtitle": null,
                  "level": 1,
                  "short-abstract": null,
                  "long-abstract": null,
                  "comments": null,
                  "starts-at": "2017-06-01T10:00:00.500127+00:00",
                  "ends-at": "2017-06-01T11:00:00.500127+00:00",
                  "language": "English",
                  "slides-url": null,
                  "videos-url": null,
                  "audios-url": null,
                  "signup-url": null,
                  "state": null,
                  "created-at": "2017-05-01T01:24:47.500127+00:00",
                  "deleted-at": null,
                  "submitted-at": null,
                  "is-mail-sent": false
                },
                "type": "session",
                "id": "21"
              }
            }

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/sessions/21/relationships/event",
                  "related": "/v1/sessions/21/event"
                }
              },
              "track": {
                "links": {
                  "self": "/v1/sessions/21/relationships/track",
                  "related": "/v1/sessions/21/track"
                }
              }, 
              "microlocation": {
                "links": {
                  "self": "/v1/sessions/21/relationships/microlocation", 
                  "related": "/v1/sessions/21/microlocation"
                }
              },
              "session-type": {
                "links": {
                  "self": "/v1/sessions/21/relationships/session-type",
                  "related": "/v1/sessions/21/session-type"
                }
              }
            },
            "attributes": {
              "title": "Micropython Session",
              "subtitle": null,
              "level": 1,
              "short-abstract": null,
              "long-abstract": null,
              "comments": null,
              "starts-at": "2017-06-01T10:00:00.500127+00:00",
              "ends-at": "2017-06-01T11:00:00.500127+00:00",
              "language": "English",
              "slides-url": null,
              "videos-url": null,
              "audios-url": null,
              "signup-url": null,
              "state": null,
              "created-at": "2017-05-01T01:24:47.500127+00:00",
              "deleted-at": null,
              "submitted-at": null,
              "is-mail-sent": false
            },
            "type": "session",
            "id": "21",
            "links": {
              "self": "/v1/sessions/21"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/sessions/21"
          }
        }

### Delete Session [DELETE]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "message": "Object successfully deleted"
          },
          "jsonapi": {
            "version": "1.0"
          }
        }



## Session Type Collection [/events/{event_id}/session-types?page,limit]
+ Parameters
    + event_id (integer) - ID of the spcific event in integer

### List All Session Types [GET]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "count": 1
          },
          "data": [
            {
              "relationships": {
                "event": {
                  "links": {
                    "self": "/v1/session-types/22/relationships/event",
                    "related": "/v1/session-types/22/event"
                  }
                }, 
                "sessions": {
                  "links": {
                    "self": "/v1/session-types/22/relationships/sessions",
                    "related": "/v1/session-types/22/sessions"
                  }
                }
              },
              "attributes": {
                "name": "Workshop",
                "length": "1:00:00"
              },
              "type": "session-type",
              "id": "22",
              "links": {
                "self": "/v1/session-types/22"
              }
            }
          ],
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/session-types"
          }
        }


### Create Session Type [POST]

+ name (string) - Name of the Session Type **(required)**
+ length (string) - Length of the Session Type **(optional)**

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>

    + Body
    
            {
              "data": {
                "attributes": {
                  "name": "Workshop",
                  "length": "1:00:00"
                },
                "type": "session-type"
              }
            }


+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/session-types/22/relationships/event",
                  "related": "/v1/session-types/22/event"
                }
              }, 
              "sessions": {
                "links": {
                  "self": "/v1/session-types/22/relationships/sessions",
                  "related": "/v1/session-types/22/sessions"
                }
              }
            },
            "attributes": {
              "name": "Workshop",
              "length": "1:00:00"
            },
            "type": "session-type",
            "id": "22",
            "links": {
              "self": "/v1/session-types/22"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/session-types/22"
          }
        }
        

## Session Type Details [/session-types/{session_type_id}]
+ Parameters
    + session_type_id (integer) - ID of the session_type in the form of an integer

### Session Details [GET]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/session-types/22/relationships/event",
                  "related": "/v1/session-types/22/event"
                }
              }, 
              "sessions": {
                "links": {
                  "self": "/v1/session-types/22/relationships/sessions",
                  "related": "/v1/session-types/22/sessions"
                }
              }
            },
            "attributes": {
              "name": "Workshop",
              "length": "1:00:00"
            },
            "type": "session-type",
            "id": "1",
            "links": {
              "self": "/v1/session-types/1"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/session-types/1"
          }
        }

        
### Update Session Type [PATCH]

+ id (integer) - ID of the record to update **(required)**
+ name (string) - Name of the Session Type **(optional)**
+ length (string) - Length of the Session Type **(optional)**

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>

    + Body

            {
              "data": {
                "attributes": {
                  "name": "Workshop",
                  "length": "1:00:00"
                },
                "type": "session-type",
                "id": "22"
              }
            }

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "event": {
                "links": {
                  "self": "/v1/session-types/22/relationships/event",
                  "related": "/v1/session-types/22/event"
                }
              }, 
              "sessions": {
                "links": {
                  "self": "/v1/session-types/22/relationships/sessions",
                  "related": "/v1/session-types/22/sessions"
                }
              }
            },
            "attributes": {
              "name": "Workshop",
              "length": "1:00:00"
            },
            "type": "session-type",
            "id": "21",
            "links": {
              "self": "/v1/session-types/22"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/session-types/22"
          }
        }

### Delete Session Type [DELETE]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "message": "Object successfully deleted"
          },
          "jsonapi": {
            "version": "1.0"
          }
        }

## Events Collection [/events?page,limit]

### List All Events [GET]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "count": 2
          },
          "data": [
            {
              "relationships": {
                "tax": {
                  "links": {
                    "self": "/v1/events/12/relationships/tax",
                    "related": "/v1/events/12/tax"
                  }
                },
                "sponsors": {
                  "links": {
                    "self": "/v1/events/12/relationships/sponsors",
                    "related": "/v1/events/12/sponsors"
                  }
                },
                "social-links": {
                  "links": {
                    "self": "/v1/events/12/relationships/social-links",
                    "related": "/v1/events/12/social-links"
                  }
                },
                "tracks": {
                  "links": {
                    "self": "/v1/events/12/relationships/tracks",
                    "related": "/v1/events/12/tracks"
                  }
                },
                "microlocation": {
                  "links": {
                    "self": "/v1/events/12/relationships/microlocations",
                    "related": "/v1/events/12/microlocation"
                  }
                },
                "session-types": {
                  "links": {
                    "self": "/v1/events/12/relationships/session-types",
                    "related": "/v1/events/12/session-types"
                  }
                }
              },
              "attributes": {
                "payment-country": "India",
                "paypal-email": "johndoe@example.com",
                "code-of-conduct": "",
                "pay-by-bank": false,
                "schedule-published-on": null,
                "payment-currency": null,
                "organizer-description": "",
                "xcal-url": null,
                "original-image-url": null,
                "topic": null,
                "onsite-details": null,
                "organizer-name": "John Doe",
                "large-image-url": null,
                "timezone": "UTC",
                "deleted-at": null,
                "ticket-url": null,
                "pay-by-stripe": false,
                "location-name": null,
                "privacy": "public",
                "state": "Draft",
                "latitude": null,
                "tax-allow": false,
                "pay-onsite": false,
                "type": null,
                "email": "example@example.com",
                "starts-at": "2017-05-31T18:30:00+00:00",
                "searchable-location-name": null,
                "description": "",
                "pentabarf-url": null,
                "logo-url": null,
                "ticket-include": false,
                "event-url": null,
                "ical-url": null,
                "pay-by-paypal": true,
                "show-map": 1,
                "sponsors-enabled": false,
                "name": "New Event 1",
                "sub-topic": null,
                "icon-image-url": null,
                "thumbnail-image-url": null,
                "created-at": "2017-06-11T06:23:39.513383+00:00",
                "longitude": null,
                "pay-by-cheque": false,
                "bank-details": null,
                "cheque-details": null,
                "has-session-speakers": false,
                "identifier": "b8324ae2",
                "ends-at": "2017-06-04T18:30:00+00:00"
              },
              "type": "event",
              "id": "12",
              "links": {
                "self": "/v1/events/12"
              }
            },
            {
              "relationships": {
                "tax": {
                  "links": {
                    "self": "/v1/events/11/relationships/tax",
                    "related": "/v1/events/11/tax"
                  }
                },
                "sponsors": {
                  "links": {
                    "self": "/v1/events/11/relationships/sponsors",
                    "related": "/v1/events/11/sponsors"
                  }
                },
                "social-links": {
                  "links": {
                    "self": "/v1/events/11/relationships/social-links",
                    "related": "/v1/events/11/social-links"
                  }
                },
                "tracks": {
                  "links": {
                    "self": "/v1/events/11/relationships/tracks",
                    "related": "/v1/events/11/tracks"
                  }
                },
                "microlocation": {
                  "links": {
                    "self": "/v1/events/11/relationships/microlocations",
                    "related": "/v1/events/11/microlocation"
                  }
                },
                "session-types": {
                  "links": {
                    "self": "/v1/events/11/relationships/session-types",
                    "related": "/v1/events/11/session-types"
                  }
                }
              },
              "attributes": {
                "payment-country": null,
                "paypal-email": null,
                "code-of-conduct": "",
                "pay-by-bank": false,
                "schedule-published-on": null,
                "payment-currency": null,
                "organizer-description": "",
                "xcal-url": null,
                "original-image-url": null,
                "topic": null,
                "onsite-details": null,
                "organizer-name": null,
                "large-image-url": null,
                "timezone": "UTC",
                "deleted-at": null,
                "ticket-url": null,
                "pay-by-stripe": false,
                "location-name": null,
                "privacy": "public",
                "state": "Draft",
                "latitude": null,
                "tax-allow": false,
                "pay-onsite": false,
                "type": null,
                "email": "example@example.com",
                "starts-at": "2017-05-31T18:30:00+00:00",
                "searchable-location-name": null,
                "description": "",
                "pentabarf-url": null,
                "logo-url": null,
                "ticket-include": false,
                "event-url": null,
                "ical-url": null,
                "pay-by-paypal": false,
                "show-map": 1,
                "sponsors-enabled": false,
                "name": "New Event",
                "sub-topic": null,
                "icon-image-url": null,
                "thumbnail-image-url": null,
                "created-at": "2017-06-11T06:03:31.790343+00:00",
                "longitude": null,
                "pay-by-cheque": false,
                "bank-details": null,
                "cheque-details": null,
                "has-session-speakers": false,
                "identifier": "cde06485",
                "ends-at": "2017-06-04T18:30:00+00:00"
              },
              "type": "event",
              "id": "11",
              "links": {
                "self": "/v1/events/11"
              }
            }
          ],
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/events"
          }
        }


### Create Event [POST]

+ name (string) - Name of the event **(required)**
+ email (string) - Email of the Organizer **(required)**
+ starts-at (datetime) - Start time of the Event **(required)**
+ ends-at (datetime) - End time of the Event **(required)**
+ timezone (string) - Local TImezone of the Event
+ latitude (float) - latitude Coordinate of the Event
+ longitude (float) - longitude Coordinate of the Event
+ logo-url (string in URL format) - URL of the logo uploaded
+ location-name (string) - Name of the location of the event
+ searchable-location-name (string) - searchable name of the event's location
+ description (string) - Description of the event
+ thumbnail-image-url (string in URL format) - URL of the uploaded thumbnail
+ large-image-url (string in URL format) - URL of the large uploaded banner image
+ original-image-url (string in URL format) - URL of original image
+ icon-image-url (string in URL format) - URL of icon image
+ organizer-name (string) - Name of The Organizer of event
+ show-map (Integer) - 
+ organizer-description (string) - Description of the Organizer
+ has-session-speakers (boolean) - **(default=False)**
+ privacy (string) - Can be ```public``` and ```private``` **(default="public")** 
+ state (string) - **(default="Draft")**
+ type (string) - 
+ topic (string) - 
+ sub-topic (string) - 
+ ticket-url (string in URL format) - 
+ code-of-conduct (string) - 
+ schedule-published-on (datetime) - 
+ ticket-include (boolean) - **(default=False)**
+ deleted-at (datetime) - 
+ payment-country (string) - 
+ payment-currency (string) - 
+ paypal-email (string) - 
+ tax-allow (boolean) - **(default=False)**
+ pay-by-paypal (boolean) - **(default=False)**
+ pay-by-stringipe (boolean) - **(default=False)**
+ pay-by-cheque (boolean) - **(default=False)**
+ pay-by-bank (boolean) - **(default=False)**
+ pay-onsite (boolean) - **(default=False)**
+ cheque-details (string) - 
+ bank-details (string) - 
+ onsite-details (string) - 
+ sponsors-enabled (boolean) - **(default=False)**

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>

    + Body
    
            {
              "data": {
                "attributes": {
                  "event-url": "http://eventyay.com/zbcd",
                  "identifier": "1234",
                  "name": "New Event",
                  "starts-at": "2017-06-01",
                  "ends-at": "2017-06-05",
                  "email": "example@example.com"
                },
                "type": "event"
              }
            }


+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "tax": {
                "links": {
                  "self": "/v1/events/12/relationships/tax",
                  "related": "/v1/events/12/tax"
                }
              },
              "sponsors": {
                "links": {
                  "self": "/v1/events/12/relationships/sponsors",
                  "related": "/v1/events/12/sponsors"
                }
              },
              "social-links": {
                "links": {
                  "self": "/v1/events/12/relationships/social-links",
                  "related": "/v1/events/12/social-links"
                }
              },
              "tracks": {
                "links": {
                  "self": "/v1/events/12/relationships/tracks",
                  "related": "/v1/events/12/tracks"
                }
              },
              "microlocation": {
                "links": {
                  "self": "/v1/events/12/relationships/microlocations",
                  "related": "/v1/events/12/microlocation"
                }
              },
              "session-types": {
                "links": {
                  "self": "/v1/events/12/relationships/session-types",
                  "related": "/v1/events/12/session-types"
                }
              }
            },
            "attributes": {
              "payment-country": null,
              "paypal-email": null,
              "code-of-conduct": "",
              "pay-by-bank": false,
              "schedule-published-on": null,
              "payment-currency": null,
              "organizer-description": "",
              "xcal-url": null,
              "original-image-url": null,
              "topic": null,
              "onsite-details": null,
              "organizer-name": null,
              "large-image-url": null,
              "timezone": "UTC",
              "deleted-at": null,
              "ticket-url": null,
              "pay-by-stripe": false,
              "location-name": null,
              "privacy": "public",
              "state": "Draft",
              "latitude": null,
              "tax-allow": false,
              "pay-onsite": false,
              "type": null,
              "email": "example@example.com",
              "starts-at": "2017-05-31T18:30:00+00:00",
              "searchable-location-name": null,
              "description": "",
              "pentabarf-url": null,
              "logo-url": null,
              "ticket-include": false,
              "event-url": null,
              "ical-url": null,
              "pay-by-paypal": false,
              "show-map": 1,
              "sponsors-enabled": false,
              "name": "New Event",
              "sub-topic": null,
              "icon-image-url": null,
              "thumbnail-image-url": null,
              "created-at": "2017-06-11T06:23:39.513383+00:00",
              "longitude": null,
              "pay-by-cheque": false,
              "bank-details": null,
              "cheque-details": null,
              "has-session-speakers": false,
              "identifier": "b8324ae2",
              "ends-at": "2017-06-04T18:30:00+00:00"
            },
            "type": "event",
            "id": "12",
            "links": {
              "self": "/v1/events/12"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/events/12"
          }
        }
        

## Event Details [/events/{event_id}]
+ Parameters
    + event_id (integer) - ID of the ticket in the form of an integer

### Event Details [GET]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "tax": {
                "links": {
                  "self": "/v1/events/13/relationships/tax",
                  "related": "/v1/events/13/tax"
                }
              },
              "sponsors": {
                "links": {
                  "self": "/v1/events/13/relationships/sponsors",
                  "related": "/v1/events/13/sponsors"
                }
              },
              "social-links": {
                "links": {
                  "self": "/v1/events/13/relationships/social-links",
                  "related": "/v1/events/13/social-links"
                }
              },
              "tracks": {
                "links": {
                  "self": "/v1/events/13/relationships/tracks",
                  "related": "/v1/events/13/tracks"
                }
              },
              "microlocation": {
                "links": {
                  "self": "/v1/events/13/relationships/microlocations",
                  "related": "/v1/events/13/microlocation"
                }
              },
              "session-types": {
                "links": {
                  "self": "/v1/events/13/relationships/session-types",
                  "related": "/v1/events/13/session-types"
                }
              }
            },
            "attributes": {
              "payment-country": null,
              "paypal-email": null,
              "code-of-conduct": "",
              "pay-by-bank": false,
              "schedule-published-on": null,
              "payment-currency": null,
              "organizer-description": "",
              "xcal-url": null,
              "original-image-url": null,
              "topic": null,
              "onsite-details": null,
              "organizer-name": null,
              "large-image-url": null,
              "timezone": "UTC",
              "deleted-at": null,
              "ticket-url": null,
              "pay-by-stripe": false,
              "location-name": null,
              "privacy": "public",
              "state": "Draft",
              "latitude": null,
              "tax-allow": false,
              "pay-onsite": false,
              "type": null,
              "email": "example@example.com",
              "starts-at": "2017-05-31T18:30:00+00:00",
              "searchable-location-name": null,
              "description": "",
              "pentabarf-url": null,
              "logo-url": null,
              "ticket-include": false,
              "event-url": null,
              "ical-url": null,
              "pay-by-paypal": false,
              "show-map": 1,
              "sponsors-enabled": false,
              "name": "New Event",
              "sub-topic": null,
              "icon-image-url": null,
              "thumbnail-image-url": null,
              "created-at": "2017-06-11T07:26:41.852285+00:00",
              "longitude": null,
              "pay-by-cheque": false,
              "bank-details": null,
              "cheque-details": null,
              "has-session-speakers": false,
              "identifier": "99c4d267",
              "ends-at": "2017-06-04T18:30:00+00:00"
            },
            "type": "event",
            "id": "13",
            "links": {
              "self": "/v1/events/13"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/events/13"
          }
        }

        
### Update Event [PATCH]

+ id (integer) ID of the record to update (required)

All other fields are optional. Add attributes you want to modify.

+ name (string) 
+ email (string) 
+ starts-at (datetime) 
+ ends-at (datetime) 
+ timezone (string) 
+ latitude (float) 
+ longitude (float) 
+ logo-url (string in URL format) 
+ location-name (string) 
+ searchable-location-name (string) 
+ description (string) 
+ thumbnail-image-url (string in URL format) 
+ large-image-url (string in URL format) 
+ original-image-url (string in URL format) 
+ icon-image-url (string in URL format) 
+ organizer-name (string) 
+ show-map (Integer) 
+ organizer-description (string) 
+ has-session-speakers (boolean) 
+ privacy (string) Can be ```public``` and ```private```
+ state (string) 
+ type (string) 
+ topic (string) 
+ sub-topic (string) 
+ ticket-url (string in URL format) 
+ code-of-conduct (string) 
+ schedule-published-on (datetime) 
+ ticket-include (boolean) 
+ deleted-at (datetime) 
+ payment-country (string) 
+ payment-currency (string) 
+ paypal-email (string) 
+ tax-allow (boolean) 
+ pay-by-paypal (boolean) 
+ pay-by-stringipe (boolean) 
+ pay-by-cheque (boolean) 
+ pay-by-bank (boolean) 
+ pay-onsite (boolean) 
+ cheque-details (string) 
+ bank-details (string) 
+ onsite-details (string) 
+ sponsors-enabled (boolean) 

+ Request (application/vnd.api+json)
    
    + Headers

            Authorization: JWT <Auth Key>

    + Body
    
            {
              "data": {
                "attributes": {
                  "event-url": "http://eventyay.com/zbcd",
                  "identifier": "1234",
                  "name": "Changed Name",
                  "starts-at": "2017-06-11T00:00:00+05:30",
                  "ends-at": "2017-06-12T00:00:00+05:30",
                  "email": "example@example.com"
                },
                "type": "event",
                "id": "13"
              }
            }

+ Response 200 (application/vnd.api+json)

        {
          "data": {
            "relationships": {
              "discount-codes": {
                "links": {
                  "self": "/v1/events/13/relationships/discount-codes",
                  "related": "/v1/events/13/discount-codes"
                }
              },
              "tax": {
                "links": {
                  "self": "/v1/events/13/relationships/tax",
                  "related": "/v1/events/13/tax"
                }
              },
              "sponsors": {
                "links": {
                  "self": "/v1/events/13/relationships/sponsors",
                  "related": "/v1/events/13/sponsors"
                }
              },
              "social-links": {
                "links": {
                  "self": "/v1/events/13/relationships/social-links",
                  "related": "/v1/events/13/social-links"
                }
              },
              "tracks": {
                "links": {
                  "self": "/v1/events/13/relationships/tracks",
                  "related": "/v1/events/13/tracks"
                }
              },
              "microlocation": {
                "links": {
                  "self": "/v1/events/13/relationships/microlocations",
                  "related": "/v1/events/13/microlocation"
                }
              },
              "session-types": {
                "links": {
                  "self": "/v1/events/13/relationships/session-types",
                  "related": "/v1/events/13/session-types"
                }
              }
            },
            "attributes": {
              "payment-country": null,
              "paypal-email": null,
              "code-of-conduct": "",
              "pay-by-bank": false,
              "schedule-published-on": null,
              "payment-currency": null,
              "organizer-description": "",
              "xcal-url": null,
              "original-image-url": null,
              "topic": null,
              "onsite-details": null,
              "organizer-name": null,
              "large-image-url": null,
              "timezone": "UTC",
              "deleted-at": null,
              "ticket-url": null,
              "pay-by-stripe": false,
              "location-name": null,
              "privacy": "public",
              "state": "Draft",
              "latitude": null,
              "tax-allow": false,
              "pay-onsite": false,
              "type": null,
              "email": "example@example.com",
              "starts-at": "2017-06-10T18:30:00+00:00",
              "searchable-location-name": null,
              "description": "",
              "pentabarf-url": null,
              "logo-url": null,
              "ticket-include": false,
              "event-url": null,
              "ical-url": null,
              "pay-by-paypal": false,
              "show-map": 1,
              "sponsors-enabled": false,
              "name": "Changed Name",
              "sub-topic": null,
              "icon-image-url": null,
              "thumbnail-image-url": null,
              "created-at": "2017-06-11T07:26:41.852285+00:00",
              "longitude": null,
              "pay-by-cheque": false,
              "bank-details": null,
              "cheque-details": null,
              "has-session-speakers": false,
              "identifier": "99c4d267",
              "ends-at": "2017-06-11T18:30:00+00:00"
            },
            "type": "event",
            "id": "13",
            "links": {
              "self": "/v1/events/13"
            }
          },
          "jsonapi": {
            "version": "1.0"
          },
          "links": {
            "self": "/v1/events/13"
          }
        }

### Delete Event [DELETE]

+ Request

    + Headers

            Accept: application/vnd.api+json

            Authorization: JWT <Auth Key>

+ Response 200 (application/vnd.api+json)

        {
          "meta": {
            "message": "Object successfully deleted"
          },
          "jsonapi": {
            "version": "1.0"
          }
        }